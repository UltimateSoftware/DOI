<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TaxHub.ObjectStorage.Integration</name>
    </assembly>
    <members>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Save(System.String,System.String,System.IO.FileInfo,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously updates an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to update.</param>
            <param name="fileInfo">The file info object to update an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Save(System.String,System.String,System.IO.FileInfo,System.Guid,System.DateTime,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="fileInfo">The file info object to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="expirationUtcDateTime">The expiration date and time for the object; the expiration is managed by the Object Store. This is an optional parameter.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Save(System.String,System.String,TaxHub.Hosting.Runtime.TemporaryStreamResult,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="streamResult">The stream to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Save(System.String,System.String,System.IO.Stream,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="stream">The stream to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Save(System.String,System.String,System.IO.Stream,System.Guid,System.DateTime,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously updates an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to update.</param>
            <param name="stream">The stream to update an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="expirationUtcDateTime">The expiration date and time for the object; the expiration is managed by the Object Store. This is an optional parameter.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Save(System.String,System.String,TaxHub.Hosting.Runtime.TemporaryStreamResult,System.Guid,System.DateTime,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="streamResult">The stream to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="expirationUtcDateTime">The expiration date in utc format.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Get(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously gets an object from the Object Store by given name.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to create.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns ObjectStoreResult object.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Get(System.String,System.String,System.Int32,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously gets an object from the Object Store by given name.
            </summary>
            <remarks>Method uses memory stream by default to store the retrieved object. 
            If object size exceeds allowed memory size a temporary file will be used instead.</remarks>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to create.</param>
            <param name="maxMemoryStreamSize">Max memory stream size</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns ObjectStoreResult object.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.GetList(System.String,System.Guid,System.Int32)">
            <summary>
            Method asynchronously gets the list of objects existing at the specified Container of Object Store.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="limit">The maximum number of items to return. Use 0 for unlimited.</param>
            <returns>Returns dynamic type object.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Delete(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously deletes an object at the Object Store.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Exists(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously deletes an object at the Object Store.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.CreateContainer(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously creates a container at the Object Store.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.IObjectStoreServiceClient.Timeout">
            <summary>
            The HttpClient Timeout
            </summary>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.ObjectStorageConfiguration.ExpirationInMinutes">
            <summary>
            Expiration offset for files that are stored in object storage
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStorageStartup.InitializeUnityContainer(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Method initializes Unity container with necessary Object Storage related registrations.
            </summary>
            <param name="container">The unity container.</param>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStorageStartup.StartInternalServices(Microsoft.Practices.Unity.IUnityContainer,System.Threading.CancellationToken)">
            <summary>
            Method initializes Object Storage.
            </summary>
            <param name="container">The unity container.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns a task.</returns>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient">
            <summary>
            Class provides connectivity to the Object Store service.
            </summary>
        </member>
        <member name="F:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.MaxMemoryStreamSize">
            <summary>
            Maximum memory size allowed to be used for storing objects retrieved from the Object Store.
            Currently set to 16Mb.
            If object size exceeds allowed memory size a temporary file will be used instead.
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.#ctor(TaxHub.Common.Logging.IAppLogger,TaxHub.ObjectStorage.Integration.ISwiftStackHttpServiceClientFactory,TaxHub.ObjectStorage.Integration.ObjectStorageConfiguration)">
            <summary>
            Constructor.
            </summary>
            <param name="logger">The application logger.</param>
            <param name="factory">The HttpClient factory.</param>
            <param name="objectStorageConfiguration">Object storage configuration</param>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Timeout">
            <summary>
            The HttpClient Timeout
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Save(System.String,System.String,System.IO.FileInfo,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="fileInfo">The file info object to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Save(System.String,System.String,System.IO.FileInfo,System.Guid,System.DateTime,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <remarks>May throw an exception if checksum is invalid or virus has been detected by the Object Store.</remarks>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="fileInfo">The file info object to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="expirationUtcDateTime">The expiration date and time for the object; the expiration is managed by the Object Store. This is an optional parameter.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Save(System.String,System.String,TaxHub.Hosting.Runtime.TemporaryStreamResult,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="streamResult">The stream to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Save(System.String,System.String,TaxHub.Hosting.Runtime.TemporaryStreamResult,System.Guid,System.DateTime,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="streamResult">The stream to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="expirationUtcDateTime">The expiration date in utc format.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Save(System.String,System.String,System.IO.Stream,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="stream">The stream to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Save(System.String,System.String,System.IO.Stream,System.Guid,System.DateTime,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously saves an object at the Object Store from given file.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to save.</param>
            <param name="stream">The stream to save an object from.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="expirationUtcDateTime">The expiration date and time for the object; the expiration is managed by the Object Store. This is an optional parameter.</param>
            <param name="checksum">The checksum for the file as its MD5 hash. This is an optional parameter; value will be computed if not supplied.</param>
            <param name="contentType">The mime type of the file. <value><see cref="F:System.String.Empty"/></value> instructs the object store to attempt to auto-detect the mime type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
            <remarks>Please ignore "Access to disposed closer" warning as this is an invalid warning and this is the code structure we need to stop an unnecessary memory copy
            which is inhibiting direct large stream to stream io.  Retry logic in combination with the StreamContent stream wrapping is preserved.</remarks>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Get(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously gets an object from the Object Store by given name.
            </summary>
            <remarks>Method uses memory stream by default to store the retrieved object.
            If object size exceeds allowed memory size a temporary file will be used instead.</remarks>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to create.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns ObjectStoreResult object.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Get(System.String,System.String,System.Int32,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously gets an object from the Object Store by given name.
            </summary>
            <remarks>Method uses memory stream by default to store the retrieved object.
            If object size exceeds allowed memory size a temporary file will be used instead.</remarks>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name to create.</param>
            <param name="maxMemoryStreamSize">Max memory stream size</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns ObjectStoreResult object.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.GetList(System.String,System.Guid,System.Int32)">
            <summary>
            Method asynchronously gets the list of objects existing at the specified Container of Object Store.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="limit">The maximum number of items to return. Use 0 for unlimited.</param>
            <returns>Returns an IEnumerable of <see cref="T:TaxHub.ObjectStorage.Integration.ObjectStoreListItem"/> type objects, each represents an object at the store.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Delete(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously deletes an object at the Object Store.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Exists(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously checks whether an object exists at the Object Store.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="objectName">The object name.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.CreateContainer(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method asynchronously creates a container at the Object Store.
            </summary>
            <param name="containerName">Container name.</param>
            <param name="correlationId">The correlationId associated with the process.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.ObjectStoreServiceClient.Dispose">
            <summary>
            Method disposes any resources used by the class.
            </summary>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.ISwiftStackHttpClientFactory">
            <summary>
            Class creates new instances of Http Client for working SwiftStack. 
            </summary>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.SwiftStackHttpClientFactory">
            <summary>
            Class creates new instances of Http Client for working SwiftStack. 
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStackHttpClientFactory.CreateAuthorizedHttpClient(System.Guid)">
            <summary>
            Creates an HttpClient that has the authorization header set.
            </summary>
            <param name="correlationId">The correlation Id to use for all Http Client requests.</param>
            <returns>Returns HttpClient object.</returns>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.SwiftStackHttpClientSecurityInterceptor">
            <summary>
            Class intercepts the request from SwiftStack HTTP client and subsequent response, 
            and is responsible for providing authentication to the request as well as resolving authorization issues if such occur. 
            Despite handling HTTP 403 Forbidden response status the code utilizing the HTTP Client is responsible for handling 
            all appropriate HTTP statuses and exceptions.
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStackHttpClientSecurityInterceptor.#ctor(TaxHub.Common.Security.IAuthTokenProvider)">
            <summary>
            Class constructor.
            </summary>
            <param name="authTokenProvider">Authentication provider</param>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStackHttpClientSecurityInterceptor.#ctor(System.Net.Http.HttpMessageHandler,TaxHub.Common.Security.IAuthTokenProvider)">
            <summary>
            Class constructor.
            </summary>
            <param name="innerHandler">Inner handler</param>
            <param name="authTokenProvider">Authentication provider</param>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStackHttpClientSecurityInterceptor.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Handles HTTP request.
            </summary>
            <param name="request">The request.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Return the response message.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStackHttpClientSecurityInterceptor.Dispose(System.Boolean)">
            <summary>
            Disposes object.
            </summary>
            <param name="disposing">Boolean indicator whether object should be disposed.</param>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.ISwiftStackHttpServiceClientFactory">
            <summary>
            Class creates new instances of Http Service Client for working SwiftStack. 
            The returned client already contains authorization, correlation and base service URI.
            </summary>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.SwiftStackHttpServiceClientFactory">
            <summary>
            Class creates new instances of Http Service Client for working SwiftStack. 
            The returned client already contains authorization, correlation and base service URI.
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStackHttpServiceClientFactory.#ctor(TaxHub.ObjectStorage.Integration.ISwiftStackHttpClientFactory,TaxHub.Common.Configuration.IHttpServiceLocator)">
            <summary>
            Class constructor.
            </summary>
            <param name="httpClientFactory">The http client factory to use.</param>
            <param name="serviceLocator">The HTTP service locator.</param>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStackHttpServiceClientFactory.CreateAuthorizedClient(System.String,System.Guid)">
            <summary>
            Creates an HttpClient for named service that has the authorization header set.
            </summary>
            <param name="serviceName">The service name. Use <see cref="T:TaxHub.Common.Configuration.HttpServiceKnownNames"/> for known names.</param>
            <param name="correlationId">The correlation Id to be used for requests.</param>
            <returns>Returns HttpClient object.</returns>
            <exception cref="T:System.Exception">An exception will be thrown if service not found in the HTTP service directory.</exception>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackAuthTokenProvider">
            <summary>
            A mock implementation of the SwiftStackAuthTokenProvider. Used when pointing
            at the mock swift api.
            </summary>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackAuthTokenProvider.Token">
            <summary>
            Gets an authentication token that can be used to
            prove the identity of someone or something.
            </summary>
            <value>
            The token.
            </value>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackAuthTokenProvider.HasToken">
            <summary>
            Gets a value indicating whether this instance has an auth token or not.
            </summary>
            <value>
              <c>true</c> if this instance has an auth token; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackAuthTokenProvider.IsAuthenticationEnabled">
            <summary>
            Gets a boolean indicator whether authentication is enabled
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackAuthTokenProvider.CheckConnectivity">
            <summary>
            Checks the connectivity to whichever external system is providing the auth token.
            </summary>
            <returns>
            A task that completes when the connectivity check has completed.  The result will be <c>true</c>
            if there is connectivity; <c>false</c> otherwise.
            </returns>
            <remarks>
            This function should not be called from production code.  It is meant as a diagnostic tool.
            </remarks>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackCredentialsProvider.LoadCredentials(System.Threading.CancellationToken)">
            <summary>
            Method loads the credentials from the Key Server to the local cache.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns task object.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackCredentialsProvider.Clear(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Clears credentials in the local cache, and optionally refreshes them. 
            </summary>
            <param name="refresh">Parameter indicates if credentials should be refreshed right away.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns a Task</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackCredentialsProvider.GetCredentials(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method returns current credentials. It optionally loads credentials if they not already loaded.
            </summary>
            <param name="loadOnNone">Boolean flag that forces loading data if not existing already. 
            NOTE: this process may raise an exception if loading process fails.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns UltiproCredentials.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackCredentialsProvider.GetCredentials">
            <summary>
            Method returns current credentials.
            </summary>
            <returns>Returns UltiproCredentials.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.MockSwiftStackCredentialsProvider.HasCredentials">
            <summary>
            Method returns boolean value whether the credentials exists in the local cache.
            </summary>
            <returns>Returns boolean value.</returns>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.SwiftStack.ISwiftStackAuthTokenProvider">
            <summary>
            An interface of the IAuthTokenProvider that provides authentication for SwiftStack objects.
            These objects contain an OAuth bearer access token and provide information about the
            token itself, such as when it expires.
            </summary>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider">
            <summary>
            An implementation of the IAuthTokenProvider that provides authentication for SwiftStack objects.
            These objects contain an OAuth bearer access token and provide information about the
            token itself, such as when it expires.
            </summary>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.HasToken">
            <summary>
            Gets a value indicating whether this instance has a non-expired auth token or not.
            </summary>
            <value><c>true</c> if this instance has a non-expired auth token; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.IsAuthenticationEnabled">
            <summary>
            Gets a boolean indicator whether authentication is enabled
            </summary>
            <remarks>Always true for SWIFT.</remarks>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.Token">
            <summary>
            Gets an authentication token that can be used to  prove the identity of service to the SwiftStack.
            </summary>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.StorageUrl">
            <summary>
            Gets the authenticated storage URL.
            </summary>
        </member>
        <member name="P:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.LastTokenRefreshDateTime">
            <summary>
            Gets the token last refresh time stamp.
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Initializes the provider which retrieves an initial token value for the outbound context.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <remarks>Method is intended to be called by the application setup process.</remarks>
            <returns>A task that completes when the outbound context's token has been initialized.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.InspectTokenAsync">
            <summary>
            This contains the logic that is executed whenever the timer elapses (which by default is roughly once a minute).
            Token inspection consists of retrieving a token if one does not exist, checking if the token expires within
            the pre-expiration renewal time and renews it if it does, and finally, notifying the NOC if the current token
            is expired, but a new one cannot be retrieved for whatever reason.
            </summary>
            <returns>A task that completes when token inspection has finished.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.RefreshTokenAsync(System.Threading.CancellationToken)">
            <summary>
            Refreshing the token using the configured client credentials.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A task that completes when the token has been refreshed. This task will have a result of <c>true</c> if
            the token refresh was successful, otherwise it will have a result of <c>false</c></returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.RetrieveAuthToken(System.Threading.CancellationToken)">
            <summary>
            Retrieves the dynamic object containing Token and storage URL from an Swift Auth service.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An object that contains an auth token and storage URL.</returns>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackAuthTokenProvider.Dispose">
            <summary>
            Method disposes any resources used by the class.
            </summary>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.SwiftStack.ISwiftStackCredentialsProvider">
            <summary>
            This interface is responsible for managing application credentials for accessing SwiftStack Services.
            </summary>
        </member>
        <member name="T:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackCredentialsProvider">
            <summary>
            This class is responsible for managing application credentials for accessing SwiftStack Services.
            </summary>
        </member>
        <member name="M:TaxHub.ObjectStorage.Integration.SwiftStack.SwiftStackCredentialsProvider.#ctor(TaxHub.Common.Logging.IAppLogger,TaxHub.Common.Security.KeyServer.IKeyServerAdapter)">
            <summary>
            Constructor.
            </summary>
            <param name="logger">The application logger.</param>
            <param name="keyServerAdapter">The Key server adapter.</param>
        </member>
    </members>
</doc>
