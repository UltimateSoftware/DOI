<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TaxHub.TestHelpers</name>
    </assembly>
    <members>
        <member name="T:TaxHub.TestHelpers.AutoFixture.Customizations.ScheduleCustomization">
            <inheritdoc />
        </member>
        <member name="M:TaxHub.TestHelpers.AutoFixture.Customizations.ScheduleCustomization.Customize(AutoFixture.IFixture)">
            <inheritdoc />
        </member>
        <member name="M:TaxHub.TestHelpers.AutoFixture.Customizations.DomainCustomization.#ctor">
            <summary>
            Domain customization intended for unit tests and also integration tests for repositories.
            Initializes a new instance of the <see cref="T:TaxHub.TestHelpers.AutoFixture.Customizations.DomainCustomization"/> class.
            </summary>
        </member>
        <member name="T:TaxHub.TestHelpers.AutoFixture.Customizations.DomainServiceCustomization">
            <summary>
            Domain service customization using fake message hub.
            </summary>
            <seealso cref="T:AutoFixture.CompositeCustomization" />
        </member>
        <member name="T:TaxHub.TestHelpers.AutoFixture.Customizations.DomainServiceCustomizationWithMessaging">
            <summary>
            Domain service customization using real rabbitmq messaging.
            </summary>
            <seealso cref="T:AutoFixture.CompositeCustomization" />
        </member>
        <member name="M:TaxHub.TestHelpers.AutoFixture.AutoFixtureHelpers.RandomFrom``1(System.Collections.Generic.IList{``0})">
            <summary>
            Returns a random value out of a collection
            </summary>
            <param name="collection"></param>
            <typeparam name="T">Typed item to return out of collection</typeparam>
            <returns>Random T out of collection</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.AutoFixture.AutoFixtureHelpers.RandomDateTime(System.Boolean)">
            <summary>
            Generates a random date after 1/1/1900
            </summary>
            <param name="allowFutureDates">A <seealso cref="T:System.Boolean"/> value allowing future dates to be returned.</param>
            <returns>A random date</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.AutoFixture.AutoFixtureHelpers.RandomValue``1">
            <summary>
            Returns a random value of type T
            </summary>
            <typeparam name="TReturnType">Type to return value of.</typeparam>
            <returns>Random value of <typeparamref name="TReturnType"/></returns>
        </member>
        <member name="M:TaxHub.TestHelpers.AutoFixture.AutoFixtureHelpers.RandomEnumValue``1">
            <summary>
            Returns a random enum value.
            </summary>
            <typeparam name="T">The enum type to select from.</typeparam>
            <returns>The selected enum value</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.AutoFixture.AutoFixtureHelpers.RandomFromDistributionGenerator``1(System.Collections.Generic.IList{System.Tuple{``0,System.Int32}})">
            <summary>
            This method generates a call back that essentially maps the distributions onto a number line based on item2, randomly selects a point in that range, and finds out which portion of the distribution the point is in.
            </summary>
            <typeparam name="T">Distribution entry.</typeparam>
            <param name="distributions">Amount of distribution occurances.</param>
            <returns>A method that randomly returns an item1 from the selection of tuples based on its amount of occurances relative ot the other entries in the list./</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.AutoFixture.TaxIntegrationFixture">
            <summary>
            Fixture that runs with fake IMessageHub
            </summary>
            <seealso cref="T:AutoFixture.Fixture" />
        </member>
        <member name="T:TaxHub.TestHelpers.AutoFixture.TaxIntegrationWithMessagingFixture">
            <summary>
            Fixtures that run with real rabbitmq messaging.
            </summary>
            <seealso cref="T:AutoFixture.Fixture" />
        </member>
        <member name="M:TaxHub.TestHelpers.AssertHelper.AssertDeclaredEntitlements(System.Type,System.String,System.Type[],System.String[])">
            <summary>
            Asserts that a set of entitlements are declared in a method.
            </summary>
            <param name="type">Type that contains the method</param>
            <param name="methodName">Name of the method</param>
            <param name="parameterTypes">Types of method parameters. In order</param>
            <param name="entitlements">Set of entitlements to assert</param>
        </member>
        <member name="M:TaxHub.TestHelpers.AssertHelper.AssertDeclaredFilter(System.Reflection.ICustomAttributeProvider,System.String)">
            <summary>
            Asserts that a filter is declared as attribute in a provider.
            </summary>
            <param name="attributeProvider">entity that provides the attributes. This could be either a method or a type</param>
            <param name="attribute">Full name of yje attribute type. Ex: AuthorizeAttribute</param>
        </member>
        <member name="T:TaxHub.TestHelpers.Builders.EmployeeStatisticBuilder">
            <summary>
            Employee statistic record builder.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Builders.EmployeeStatisticBuilder.Build(TaxHub.CoreServices.Application.FileIngestion.Rts.QE.QEEmployeeStatistic)">
            <summary>
            Builds an employee statistic record for QE processing.
            </summary>
            <param name="employeeStatistic">The employee statistic record.</param>
            <returns>Returns an employee statistic record.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.Builders.EmployeeMasterBuilder">
            <summary>
            Employee master record builder.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Builders.EmployeeMasterBuilder.Build(TaxHub.CoreServices.Application.FileIngestion.Rts.QE.QEEmployeeMaster)">
            <summary>
            Builds an employee master record for QE processing.
            </summary>
            <param name="employeeMaster">The employee master record.</param>
            <returns>Returns an employee master record.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.Builders.EmployeeWageBuilder">
            <summary>
            Employee wage record builder.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Builders.EmployeeWageBuilder.Build(TaxHub.CoreServices.Application.FileIngestion.Rts.QE.QEEmployeeWage)">
            <summary>
            Builds an employee wage record for QE processing.
            </summary>
            <param name="employeeWage">The employee wage record.</param>
            <returns>Returns an employee wage record.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.Builders.ReconciliationAmountBuilder">
            <summary>
            Rts reconciliation amount record builder.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Builders.ReconciliationAmountBuilder.Build(TaxHub.CoreServices.Application.FileIngestion.Rts.QE.QEReconciliationAmount)">
            <summary>
            Builds a reconciliation amount record for QE processing.
            </summary>
            <param name="reconciliationAmount">The reconciliation amount record.</param>
            <returns>Returns a reconciliation amount record.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Builders.ReconciliationAmountBuilder.Build(TaxHub.CoreServices.Application.FileIngestion.Rts.YE.YEReconciliationAmount)">
            <summary>
            Builds a reconciliation amount record for YE processing.
            </summary>
            <param name="reconciliationAmount">The reconciliation amount record.</param>
            <returns>Returns a reconciliation amount record.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.Builders.PayrollHeaderBuilder">
            <summary>
            Payroll header record builder.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Builders.PayrollHeaderBuilder.Build(TaxHub.CoreServices.Application.FileIngestion.Rts.QE.QEPayrollHeader)">
            <summary>
            Builds a payroll header record for QE processing.
            </summary>
            <param name="payrollHeader">The payroll header record.</param>
            <returns>Returns a payroll header record.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Builders.PayrollHeaderBuilder.Build(TaxHub.CoreServices.Application.FileIngestion.Rts.YE.YEPayrollHeader)">
            <summary>
            Builds a payroll header record for YE processing.
            </summary>
            <param name="payrollHeader">The payroll header record.</param>
            <returns>Returns a payroll header record.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.FileTrackerYearEndLocalFileService">
            <summary>
            Decorator for IYearEndLocalFileService. It tracks created files, and exposes a method to delete them.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Extensions.StringExtensions.Randomize(System.String,System.Int32)">
            <summary>
            Returns a new string made up of random chars of length n
            </summary>
            <param name="inputString">ths string with random characters</param>
            <param name="length">length of the final string</param>
            <returns>A string comprized of randon characters</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.procParameters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParameters.procParameter">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.procParametersProcParameter">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.parameterName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.mode">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.modeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.datatype">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.datatypeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.precision">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.scale">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.size">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.sizeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.nullable">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.aggregationRule">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.aggregationRuleSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.procParametersProcParameter.value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.procParametersProcParameterMode">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.procParametersProcParameterMode.in">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.procParametersProcParameterMode.out">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.procParametersProcParameterMode.inout">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.procParametersProcParameterMode.mandatory">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.procParametersProcParameterMode.optional">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.datatype">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.unknown">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.unsupported">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.int16">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.int32">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.int64">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.decimal">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.numeric">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.float">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.float32">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.float64">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.binary">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.binaryLength16">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.date">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.time">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.dateTime">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.timeInterval">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.character">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.characterLength16">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.characterLength32">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.blob">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.textBlob">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.blobArray">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.databaseKey">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.varBit">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.bit">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.boolean">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.timeTZ">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.timeStampTZ">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.intervalYM">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.nChar">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.datatype.nVarChar">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.regularAggregateType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.unsupported">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.unknown">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.average">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.automatic">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.calculated">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.count">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.countDistinct">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.countNonZero">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.maximum">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.median">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.minimum">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.standardDeviation">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.sum">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.regularAggregateType.variance">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityDefinitionSetType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityDefinitionSetType.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityDefinitionSetType.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityDefinitionSetType.includeRule">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.ItemsChoiceType5">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType5.refobj">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType5.viewref">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityDefinitionSetTypeIncludeRule">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.securityDefinitionSetTypeIncludeRule.include">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.securityDefinitionSetTypeIncludeRule.hide">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.securityDefinitionSetTypeIncludeRule.exclude">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.parameterMapEntryType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.parameterMapEntryType.key">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.parameterMapEntryType.value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.queryItemMapType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemMapType.keyRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemMapType.valueRef">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.promptInfoType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.promptInfoType.promptType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.promptInfoType.promptCascadeOnRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.promptInfoType.promptDisplayItemRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.promptInfoType.promptFilterItemRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.promptInfoType.promptUseItemRef">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.promptTypeValues">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.serverDetermined">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.editBox">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.selectDate">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.selectDateTime">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.selectInterval">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.selectTime">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.selectValue">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.selectWithSearch">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.promptTypeValues.selectWithTree">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.determinantType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.determinantType.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.determinantType.key">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.determinantType.attributes">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.determinantType.canGroup">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.determinantType.identifiesRow">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.determinantType.property">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.property">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.property.property1">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.propertyType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.propertyType.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.propertyType.type">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.propertyType.typeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.propertyType.Text">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.propertyTypeType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.blob">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.boolean">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.composite">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.dateTime">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.enumeration">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.hidden">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.number">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.readOnly">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.ref">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.propertyTypeType.string">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityFilterDefinitionType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityFilterDefinitionType.securityObject">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityFilterDefinitionType.basedOn">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityFilterDefinitionType.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityFilterDefinitionType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityObjectType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityObjectType.displayPath">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityObjectType.cmSearchPath">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityObjectType.type">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityObjectTypeDisplayPath">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityObjectTypeDisplayPath.Value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityObjectTypeType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.securityObjectTypeType.account">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.securityObjectTypeType.group">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.securityObjectTypeType.role">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityFilterDefinitionTypeBasedOn">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityFilterDefinitionTypeBasedOn.cmSearchPath">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.expressionType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.expressionType.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.expressionType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.refobjViaShortcut">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.refobjViaShortcut.refobj">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.refobjViaShortcut.refobj1">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.refobjViaShortcut.dataItemName">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType.functionref">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType.refobj">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType.refobjViaShortcut">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.macroType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.macroType.Text">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.ItemsChoiceType4">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType4.displayName">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType4.expression">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType4.refobj">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos._hierarchyType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._hierarchyType.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._hierarchyType.property">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._hierarchyType.externalName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._hierarchyType.externalOrdinal">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._hierarchyType.functionalDependency">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos._determinantType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._determinantType.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._determinantType.property">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._determinantType.externalName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._determinantType.externalOrdinal">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._determinantType.Item">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._determinantType.attributes">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos._determinantTypeKey">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos._determinantTypeKey.isUniqueKey">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.keyType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.keyType.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.keyType.queryItems_collection">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.storedProcedureType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.storedProcedureType.dataSourceRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.storedProcedureType.canonicalName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.storedProcedureType.type">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.storedProcedureType.procParameters">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.storedProcedureTypeType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.storedProcedureTypeType.unknown">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.storedProcedureTypeType.procedure">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.storedProcedureTypeType.other">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.cardinalityType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.cardinalityType.refobj">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.cardinalityType.mincard">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.cardinalityType.maxcard">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.cardinalityEnum">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.cardinalityEnum.unknown">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.cardinalityEnum.unsupported">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.cardinalityEnum.zero">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.cardinalityEnum.one">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.cardinalityEnum.many">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceRefsType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceRefsType.dataSourceRef">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionType.Item">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.sources">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.generateSQL">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.generateSQLSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.sql">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.key">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.index">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.filters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.tableType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.procParameters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQuery.multiDb">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.generateSQL">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.generateSQL.asView">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.generateSQL.minimized">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.sqlType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.sqlType.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.sqlType.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.sqlType.Text">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.sqlType.type">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.ItemsChoiceType1">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType1.column">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType1.table">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.sqlTypeType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.sqlTypeType.cognos">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.sqlTypeType.oracle">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.sqlTypeType.db2">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.sqlTypeType.sqlServer">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.sqlTypeType.sql92">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.sqlTypeType.sql99">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.sqlTypeType.native">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.sqlTypeType.passThrough">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeDbQueryIndex">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQueryIndex.unique">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeDbQueryIndex.queryItems_collection">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.filters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.filters.filterDefinition">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.filtersFilterDefinition">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.filtersFilterDefinition.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.filtersFilterDefinition.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.filtersFilterDefinition.apply">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.filtersFilterDefinition.application">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.ItemsChoiceType2">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType2.displayName">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType2.expression">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType2.refobj">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.filtersFilterDefinitionApply">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.filtersFilterDefinitionApply.always">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.filtersFilterDefinitionApply.asNeeded">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.applicationType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.applicationType.beforeAutoAggregation">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.applicationType.afterAutoAggregation">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeDbQueryTableType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeDbQueryTableType.table">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeDbQueryTableType.view">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeDbQueryTableType.nonTransparentTable">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeDbQueryTableType.unknown">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeMdQuery">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeMdQuery.sources">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeMdQuery.mdDimension">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeMdQuery.filters">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeModelQuery">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQuery.generateSQL">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQuery.generateSQLSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQuery.sql">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQuery.relationships">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQuery.filters">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationships">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationships.relationshipDefinition">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinition">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinition.Item">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationship">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationship.expression">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationship.sql">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationship.left">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationship.right">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationship.joinFilterType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationship.fjoAdvanced">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationshipJoinFilterType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationshipJoinFilterType.none">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationshipJoinFilterType.in">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationshipJoinFilterType.between">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeModelQueryRelationshipsRelationshipDefinitionEmbeddedRelationshipJoinFilterType.table">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperation">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperation.querySubjectRefs">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperation.setOperation">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperation.duplicates">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperation.filters">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperationSetOperation">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperationSetOperation.UNION">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperationSetOperation.INTERSECT">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperationSetOperation.EXCEPT">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperationDuplicates">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperationDuplicates.remove">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.definitionTypeQueryOperationDuplicates.preserve">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.nameType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.nameType.locale">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.nameType.Value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.reportObjectType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.description">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.guid">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.lastChanged">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.lastChangedSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.lastChangedBy">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.comment">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.screenTip">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.reportObjectType.property">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.queryItemType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.Item">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.hidden">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.usage">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.format">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.currency">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.datatype">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.datatypeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.precision">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.scale">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.size">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.sizeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.nullable">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.aggregationRule">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.aggregationRuleSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.displayType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.MIMEType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.promptInfo">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.regularAggregate">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.semiAggregate">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.sortOnRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.unSortable">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.sort">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.roles">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.conformanceRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.collationSequenceName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.collationSequenceLevel">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.originalCollationSequenceName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemType.originalEncodingName">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.queryItemTypeUsage">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeUsage.unknown">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeUsage.identifier">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeUsage.fact">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeUsage.attribute">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.queryItemTypeDisplayType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeDisplayType.picture">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeDisplayType.link">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeDisplayType.value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.queryItemTypeSort">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeSort.ascending">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeSort.descending">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.queryItemTypeSort.none">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.queryItemTypeRole">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemTypeRole.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemTypeRole.intrinsic">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.modelObjectType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.modelObjectType.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.modelObjectType.guid">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.modelObjectType.property">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.project">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.locales">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.defaultLocale">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.fixIdsToDefaultLocale">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.qosOverrides">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.isNullSuppressionAllowed">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.isMultiEdgeNullSuppressionAllowed">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.isAccessToNullSuppressionOptionsAllowed">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.steward">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.physicalSources">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.namespace">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.dataSources">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.parameterMaps">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.securityViews">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.packages">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.useMFW">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.containsDynamicContent">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.project.queryMode">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.supportedLocalesTypeLocale">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.supportedLocalesTypeLocale.Value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.qosOverridesQosOverride">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.qosOverridesQosOverride.functionId">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.qosOverridesQosOverride.qosLevel">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.qosOverridesQosOverride.qosLevelSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.qosOverridesQosOverride.description">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.qosOverridesQosOverrideQosLevel">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.qosOverridesQosOverrideQosLevel.unavailable">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.qosOverridesQosOverrideQosLevel.restricted">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.qosOverridesQosOverrideQosLevel.limited">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.qosOverridesQosOverrideQosLevel.ok">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.projectPhysicalSources">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.projectPhysicalSources.physicalSource">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.projectPhysicalSourcesPhysicalSource">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.projectPhysicalSourcesPhysicalSource.Item">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.projectPhysicalSourcesPhysicalSource.ItemElementName">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.ItemChoiceType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemChoiceType.content">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemChoiceType.filePath">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.namespace">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespace.linkedNode">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.namespaceLinkedNode">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNode.source">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNode.queryPath">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNode.type">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSource">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSource.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSource.type">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceConnection">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceConnection.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceConnection.value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceScope">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceScope.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceScope.value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceSignon">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceSignon.name">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeSourceSignon.value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeQueryPath">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.namespaceLinkedNodeQueryPath.value">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.namespaceType">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.sectionType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.sectionType.Items">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.calculationType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.expression">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.previewFilters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.securityFilters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.hidden">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.usage">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.format">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.currency">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.datatype">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.datatypeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.precision">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.scale">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.size">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.sizeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.nullable">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.aggregationRule">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.aggregationRuleSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.displayType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.MIMEType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.promptInfo">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.regularAggregate">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.semiAggregate">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.sortOnRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.unSortable">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.sort">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.roles">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.conformanceRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.externalName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.calcType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.calcTypeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.hierarchies">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.dimensions">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.datasources">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.calculationType.status">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.querySubjectTypePreviewFilters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectTypePreviewFilters.previewFilter">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.querySubjectTypePreviewFiltersPreviewFilter">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectTypePreviewFiltersPreviewFilter.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectTypePreviewFiltersPreviewFilter.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectTypePreviewFiltersPreviewFilter.application">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.ItemsChoiceType3">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType3.displayName">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType3.expression">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.ItemsChoiceType3.refobj">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.querySubjectTypeSecurityFilters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectTypeSecurityFilters.securityFilterDefinition">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.calculationTypeCalcType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.calculationTypeCalcType.unknown">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.calculationTypeCalcType.namedSet">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.calculationTypeCalcType.macros">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.statusType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.statusType.valid">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.statusType.invalid">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.statusType.needsReevaluation">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dimension">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dimension.type">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dimension.membersRollup">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dimension.sortMembersMetadata">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dimension.sortMembersData">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dimension.sortMembersAndEnableMrf">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dimension.aliasTableMapRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dimension.Items">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dimensionType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dimensionType.regular">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dimensionType.time">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dimensionType.measure">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dimensionType.currency">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.hierarchy">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.externalName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.multiRoot">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.balanced">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.ragged">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.rootMember">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.rootMUN">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.rootCaption">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.sortedHierarchy">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.cardinality">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.parentChild">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.externalNumberOfLevels">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchy.isWideFan">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.level">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.level.isUnique">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.level.externalName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.level.externalOrdinal">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.level.isManual">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.level.isManualSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.level.memberSort">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.level.orderOfMagnitude">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.orderByTypeSortItem">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.orderByTypeSortItem.refobj">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.orderByTypeSortItem.sort">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.orderByTypeSortItem.nullPlacement">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.orderByTypeSortItemSort">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.orderByTypeSortItemSort.ascending">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.orderByTypeSortItemSort.descending">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.orderByTypeSortItemNullPlacement">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.orderByTypeSortItemNullPlacement.nullsUnspecified">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.orderByTypeSortItemNullPlacement.nullsFirst">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.orderByTypeSortItemNullPlacement.nullsLast">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.queryItemFolderType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemFolderType.hidden">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.queryItemFolderType.Items">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.queryItem">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.hierarchySortedHierarchy">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.hierarchySortedHierarchy.ascending">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.hierarchySortedHierarchy.descending">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.hierarchySortedHierarchy.none">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.objectType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.objectType.object">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.hierarchyFolder">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.hierarchyFolder.Items">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.measure">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measure.measure1">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measure.isHierarchical">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measure.aggregateRules">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measure.allocationRule">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.measureAggregateRule">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measureAggregateRule.dimensionRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measureAggregateRule.applyAggregate">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.unsupported">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.unknown">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.sum">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.minimum">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.maximum">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.average">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.count">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.firstPeriod">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.lastPeriod">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.standardDeviation">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAggregateRuleApplyAggregate.variance">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.measureAllocationRule">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAllocationRule.default">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.measureAllocationRule.constant">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.measureFolder">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measureFolder.hidden">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measureFolder.hiddenSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.measureFolder.Items">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.querySubjectType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.definition">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.levels">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.hierarchies">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.previewFilters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.securityFilters">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.externalizeMethod">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.externalizeAutoSummary">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.useInJoinPath">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.orderOfMagnitude">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.querySubjectUsage">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.useLocalCache">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.numberOfRows">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubjectType.status">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.querySubjectTypeExternalizeMethod">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.querySubjectTypeExternalizeMethod.default">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.querySubjectTypeExternalizeMethod.csv">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.querySubjectTypeExternalizeMethod.tab">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.querySubjectTypeExternalizeMethod.iqd">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.querySubjectTypeQuerySubjectUsage">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.querySubjectTypeQuerySubjectUsage.automatic">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.querySubjectTypeQuerySubjectUsage.bridge">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.querySubjectTypeQuerySubjectUsage.summaryQuery">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.filterType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.filterType.expression">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.filterType.status">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.functionType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionType.syntaxTip">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionType.canonicalName">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionType.dataSourceRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionType.result">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionType.procParameters">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.functionTypeResult">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.datatype">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.datatypeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.precision">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.scale">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.size">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.sizeSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.nullable">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.aggregationRule">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionTypeResult.aggregationRuleSpecified">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.querySubject">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubject.determinants">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.querySubject.Items">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.relationshipType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipType.expression">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipType.sql">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipType.left">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipType.right">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipType.joinFilterType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipType.fjoAdvanced">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipType.status">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.relationshipShortcutType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipShortcutType.left">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipShortcutType.right">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipShortcutType.relationshipRef">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.relationshipShortcutTypeLeft">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipShortcutTypeLeft.refobj">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.relationshipShortcutTypeRight">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.relationshipShortcutTypeRight.refobj">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.scopeRelationshipType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipType.left">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipType.right">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipType.scope">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScope">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScope.levelRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScope.measureScope">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScope">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScope.rollup">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScope.rollupSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScope.allocation">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScope.allocationSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScope.refobj">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScope.excluded">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScopeAllocation">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScopeAllocation.doNotAllocate">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.scopeRelationshipTypeScopeMeasureScopeAllocation.constant">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.shortcutType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.shortcutType.refobj">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.shortcutType.targetType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.shortcutType.treatAs">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.shortcutType.useInJoinPath">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.shortcutTypeTreatAs">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.shortcutTypeTreatAs.reference">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.shortcutTypeTreatAs.alias">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.projectDataSources">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.projectDataSources.dataSource">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.queryProcessing">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.rollupProcessing">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.transactionAccessMode">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.transactionStatementMode">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.nullValueSorting">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cmDataSource">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.catalog">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cube">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.schema">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.type">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.connectionString">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.aliasTableMapRef">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeDescription">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubePath">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeCreatedOn">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeCreatedOnSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeDataUpdatedOn">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeDataUpdatedOnSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeSchemaUpdatedOn">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeSchemaUpdatedOnSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeIsOptimized">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeIsOptimizedSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeDefaultMeasure">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.cubeCurrentPeriod">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.suppression">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceType.attributeDimensionsAsProperties">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceTypeQueryProcessing">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeQueryProcessing.databaseOnly">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeQueryProcessing.limitedLocal">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceTypeRollupProcessing">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeRollupProcessing.unspecified">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeRollupProcessing.local">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeRollupProcessing.database">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeRollupProcessing.extended">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionAccessMode">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionAccessMode.unspecified">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionAccessMode.read">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionAccessMode.write">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionStatementMode">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionStatementMode.unspecified">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionStatementMode.rollback">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionStatementMode.commit">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTransactionStatementMode.autocommit">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceTypeNullValueSorting">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeNullValueSorting.unspecified">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeNullValueSorting.ascendingNullsFirst">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeNullValueSorting.ascendingNullsLast">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeNullValueSorting.nullsFirst">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeNullValueSorting.nullsLast">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceTypeType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceTypeType.queryType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceTypeType.interface">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.dataSourceTypeType.functionSetID">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceTypeTypeQueryType">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTypeQueryType.relational">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeTypeQueryType.multidimensional">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.dataSourceTypeSuppression">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeSuppression.none">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeSuppression.null">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeSuppression.zero">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.dataSourceTypeSuppression.nullAndZero">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.parameterMapType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.parameterMapType.defaultValue">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.parameterMapType.freshness">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.parameterMapType.loadAsNeeded">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.parameterMapType.Items">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.parameterMapType.hidden">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityViewType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityViewType.definition">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityViewType.access">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityViewType.functionSets">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityViewType.qosOverrides">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityViewType.isRoleBased">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.securityViewTypeAccess">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.securityViewTypeAccess.decisionRole">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.functionSetsFunctionSet">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionSetsFunctionSet.functionSetID">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.packageViewType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.lastPublished">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.lastPublishedSpecified">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.lastPublishedCMPath">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.maxVersions">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.locales">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.definition">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.adminAccess">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.isNullSuppressionAllowed">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.isMultiEdgeNullSuppressionAllowed">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.isAccessToNullSuppressionOptionsAllowed">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.useV5DataServer">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewType.isRoleBased">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.packageViewTypeAdminAccess">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.packageViewTypeAdminAccess.decisionRole">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.projectUseMFW">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.projectUseMFW.true">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.projectUseMFW.false">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.projectUseMFW.always">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.projectQueryMode">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.projectQueryMode.mixed">
            <remarks/>
        </member>
        <member name="F:TaxHub.TestHelpers.Cognos.projectQueryMode.dynamic">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.mproperty">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.mproperty.locale">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.decisionRoleType">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.decisionRoleType.Items">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.functionSets">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.functionSets.functionSet">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.qosOverrides">
            <remarks/>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.qosOverrides.qosOverride">
            <remarks/>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.ICognosQuerySubjectsValidator">
            <summary>
            Report validator.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Cognos.ICognosQuerySubjectsValidator.Validate(TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationRequest)">
            <summary>
            Validates a cognos report using SDK.
            </summary>
            <param name="request">The request.</param>
            <returns>Validation results.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationRequest">
            <summary>
            Contains report vailidation arguments.
            </summary>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationResult">
            <summary>
            Contain the validation results.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationResult.Errors">
            <summary>
            Get a collection with all the validation errors, if any.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationResult.IsError">
            <summary>
            Returns true if there if any validation error exists.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes an instance of the validation result.
            </summary>
            <param name="errors">Collection of errors</param>
        </member>
        <member name="M:TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationResult.ToString">
            <summary>
            Override to list the errors, if any
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidator">
            <inheritdoc />
            <summary>
            Validates Query Subject metadata from a Cognos model.xml file against the datasource objects.
            <remarks>Parses the model and for each query subject it prepares a SQL query with the query items names to validate in SQL.</remarks>
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidator.Validate(TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationRequest)">
            <inheritdoc cref="M:TaxHub.TestHelpers.Cognos.ICognosQuerySubjectsValidator.Validate(TaxHub.TestHelpers.Cognos.CognosQuerySubjectsValidationRequest)"/>
        </member>
        <member name="T:TaxHub.TestHelpers.ExecutionStats">
            <summary>
            Contains statistics that describe the completed query execution for the winning plan. For write operations, completed query execution refers to the modifications that would be performed, but does not apply the modifications to the database.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExecutionStats.NumberReturned">
            <summary>
            Number of documents that match the query condition. nReturned corresponds to the n field returned by cursor.explain() in earlier versions of MongoDB.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExecutionStats.ExecutionTimeMillis">
            <summary>
            Total time in milliseconds required for query plan selection and query execution. executionTimeMillis corresponds to the millis field returned by cursor.explain() in earlier versions of MongoDB.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExecutionStats.TotalKeysExamined">
            <summary>
            Number of index entries scanned. totalKeysExamined corresponds to the nscanned field returned by cursor.explain() in earlier versions of MongoDB.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExecutionStats.TotalDocsExamined">
            <summary>
            Number of documents scanned. In earlier versions of MongoDB, totalDocsExamined corresponds to the nscannedObjects field returned by cursor.explain() in earlier versions of MongoDB.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExecutionStats.ExecutionStages">
            <summary>
            A document that describes the child stage, which provides the documents or index keys to its parent. The field is present if the parent stage has only one child.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExecutionStats.AdditionalData">
            <summary>
            Gets or sets the additional data.
            </summary>
            <value>
            The additional data.
            </value>
        </member>
        <member name="T:TaxHub.TestHelpers.ExplainMongoDbRepositoryTestHelper`1">
            <summary>
            Check out example usages here:
            https://ulti.quip.com/SzEtAbZFiONM
            </summary>
            <typeparam name="TRepo">The type of the repo.</typeparam>
        </member>
        <member name="T:TaxHub.TestHelpers.ExplainResult">
            <summary>
            Detailed explaination returned from MongoDB about a query.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExplainResult.QueryPlanner">
            <summary>
            Query planner output.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExplainResult.ExecutionStats">
            <summary>
            The returned executionStats information details the execution of the winning plan.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.ExplainResult.AdditionalData">
            <summary>
            Gets or sets the additional data.
            </summary>
            <value>
            The additional data.
            </value>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeCacheRevocationService.#ctor(TaxHub.Common.Logging.IAppLogger,TaxHub.Messaging.IMessageHub,SmartHub.Hosting.Caching.IObjectCacheManager)">
            <summary>
            Constructor.
            </summary>
            <param name="logger">The application logger</param>
            <param name="messageHub">The message hub to publish messages to.</param>
            <param name="cacheManager">Cache manager.</param>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeCacheRevocationService.RequestCacheRevocation(System.String,System.Guid,System.String[])">
             <summary>
             Methods requests cache revocation by sending system-wide message to all services.
             </summary>
             <param name="cacheInstanceName">The cache instance name.</param>
             <param name="correlationId">The correlation id for tracking.</param>
             <param name="cacheKeys">The list of cache keys to revoke.</param>
            
             <returns>Returns boolean indicator of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeCacheRevocationService.RevokeLocalCacheItem(System.String,System.String[])">
            <summary>
            Methods revokes local cache by its instance and key(s).
            </summary>
            <param name="cacheInstanceName">The cache instance name.</param>
            <param name="cacheKeys">The list of cache keys to revoke.</param>
        </member>
        <member name="M:TaxHub.TestHelpers.FileHelper.DeleteDirectory(System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Deleting a file from a system can cause spurious failures such as external processes reading the folder (anti-virus, search indexes, backup etc). The solution
            is to try multiple times and pausing between the attempts. We will try few attempts with delay to allow the system to process.  
            </summary>
            <param name="directoryPath">The path to the directory</param>
            <param name="ignoreFailure">flag to handle exception</param>
            <param name="maxRetries">no of retries</param>
            <param name="millisecondsDelay">time to delay between retries in millseconds</param>
        </member>
        <member name="M:TaxHub.TestHelpers.FileHelper.DeleteFile(System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Deleting a file from a system can cause spurious failures such as external processes reading the folder (anti-virus, search indexes, backup etc). The solution
            is to try multiple times and pausing between the attempts. We will try few attempts with delay to allow the system to process.  
            </summary>
            <param name="filePath">The path to the file</param>
            <param name="ignoreFailure">flag to handle exception</param>
            <param name="maxRetries">no of retries</param>
            <param name="millisecondsDelay">time to delay between retries in millseconds</param>
        </member>
        <member name="T:TaxHub.TestHelpers.InputStage">
            <summary>
            A document that describes the child stage, which provides the documents or index keys to its parent. The field is present if the parent stage has only one child.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.InputStage.Stage">
            <summary>
            A string that denotes the name of the stage
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.InputStage.AdditionalData">
            <summary>
            Gets or sets the additional data.
            </summary>
            <value>
            The additional data.
            </value>
        </member>
        <member name="P:TaxHub.TestHelpers.InputStage.ChildInputStage">
            <summary>
            A document that describes the child stage, which provides the documents or index keys to its parent. The field is present if the parent stage has only one child.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.InputStage.IndexName">
            <summary>
            Name of the index used in this stage. 
            </summary>
        </member>
        <member name="T:TaxHub.TestHelpers.Integration.UnityContainerRepositoryIntegrationTest">
            <summary>
            UnityContainer Base Test class for testing repository classes.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.UnityContainerRepositoryIntegrationTest.RegisterApplicationClasses">
            <summary>
            Doesn't need to register the security services, so registration can be quicker.
            </summary>
        </member>
        <member name="T:TaxHub.TestHelpers.Integration.DbTracker`3">
            <summary>
            A testing utility for tracking repository inserts and deleting all inserted entities on tear down.
            </summary>
            <typeparam name="TSource">The generic entity/aggregate type.</typeparam>
            <typeparam name="TDbId">The generic type used as an identifier for the entity/aggregate. Usually a Guid, but can be another type.</typeparam>
            <typeparam name="TRepo">The repository type.</typeparam>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.Insert(`0)">
            <summary>
            Insert a record into the repository and track for deletion
            </summary>
            <param name="entityToInsert">The entity to insert and track</param>
            <returns>A reference to the tracker to allow chaining</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.InsertAsync(`0)">
            <summary>
            Insert a record into the repository and track for deletion
            </summary>
            <param name="entityToInsert">The entity to insert and track</param>
            <returns>A reference to the tracker to allow chaining</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.Insert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Insert multiple records into the repository and track for deletion
            </summary>
            <param name="entitiesToInsert">The entities to insert and track</param>
            <returns>A reference to the tracker to allow chaining</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.Insert(`0[])">
            <summary>
            Insert multiple records into the repository and track for deletion
            </summary>
            <param name="entitiesToInsert">The entities to insert and track</param>
            <returns>A reference to the tracker to allow chaining</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.TrackForDeletion(`0)">
            <summary>
            Adds the entity to the tracked entities that will be deleted on tear down
            </summary>
            <param name="entityToTrack">The entity to track</param>
            <returns>A reference to the tracker to allow chaining</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.TrackForDeletion(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple entities to the tracked entities that will be deleted on tear down
            </summary>
            <param name="entitiesToTrack">The entities to track</param>
            <returns>A reference to the tracker to allow chaining</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.IsInstantiated(`1)">
            <summary>
            Indicates if an entity with the given Id exists in the repository
            </summary>
            <param name="id">The Id of the entity</param>
            <returns>A boolean indicating if the entity exists</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.GetById(`1)">
            <summary>
            Gets the entity with the given Id from the repository
            </summary>
            <param name="id">The Id of the entity</param>
            <returns>The entity with the given Id</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.TrackedEntities">
            <summary>
            Gets all entities being tracked
            </summary>
            <returns>An array of entities being tracked</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.DbTracker`3.TearDown">
            <summary>
            Deletes all tracked entities.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.UnityContainerIntegrationTest.CreateFixture">
            <summary>
            TaxFixture is used to create model objects with random valid data.  Should not be used to create services
            because then you are overriding the basic creation mechanism of using UnityContainer, which is how the
            application creates repositories and sevvices.
            </summary>
            <returns>IFixture with customizations for model creation.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.UnityContainerIntegrationTest.CreateLogger">
            <summary>
            Creates a thread safe fake logger for testing.
            </summary>
            <returns>defualt returns a thread safe IAppLogger, override to change.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.UnityContainerIntegrationTest.CreateMessageHub">
            <summary>
            Creates a fake message hub that always returns true for publishing.
            </summary>
            <returns>Default returns a fake IMessageHub, override to change</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.UnityContainerIntegrationTest.RegisterApplicationClasses">
            <summary>
            Method to override for registering core and application classes to the container.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.UnityContainerIntegrationTest.RegisterTestClasses">
            <summary>
            Method to override for registering fakes and additional classes needed.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.Integration.UnityContainerIntegrationTest.InsertAndTrackTenant">
            <summary>Use when you need a random tenant that doesn't need to track named tax representative.</summary>
            <returns>Random Tenant</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.DataProfilerActionAttribute">
            <summary>
            Custom NUnit test action attribute for test suites. It calculates the number of rows on all tables (excluding audit tables)
            before and after each test. If they are different it outputs a message to the test execution context output.
            Useful to identify tests that delete more data or leave data after tear down.
            To use this, the test fixture should be decorated with attribute [DataProfilerAction], or it could be also applied to
            a base class or to an interface implemented by the fixture.
            </summary>
            <inheritdoc cref="T:NUnit.Framework.ITestAction" />
            <inheritdoc cref="T:System.Attribute" />
        </member>
        <member name="M:TaxHub.TestHelpers.DataProfilerActionAttribute.BeforeTest(NUnit.Framework.Interfaces.ITest)">
            <inheritdoc />
        </member>
        <member name="M:TaxHub.TestHelpers.DataProfilerActionAttribute.AfterTest(NUnit.Framework.Interfaces.ITest)">
            <inheritdoc />
        </member>
        <member name="P:TaxHub.TestHelpers.DataProfilerActionAttribute.Targets">
            <inheritdoc />
        </member>
        <member name="T:TaxHub.TestHelpers.QueryPlan">
            <summary>
            Detailed explaination returned from MongoDB about a query.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlan.Stage">
            <summary>
            A string that denotes the name of the stage
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlan.InputStage">
            <summary>
            A document that describes the child stage, which provides the documents or index keys to its parent. The field is present if the parent stage has only one child.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlan.InputStages">
            <summary>
            An array of documents describing the child stages. Child stages provide the documents or index keys to the parent stage. The field is present if the parent stage has multiple child nodes. For example, stages for $or expressions or index intersection consume input from multiple sources.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlan.AdditionalData">
            <summary>
            Gets or sets the additional data.
            </summary>
            <value>
            The additional data.
            </value>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlanner.PlannerVersion">
            <summary>
            Query planner version.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlanner.Namespace">
            <summary>
            A string that specifies the namespace (i.e., &lt;database&gt;.&lt;collection&gt;) against which the query is run.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlanner.IndexFilterSet">
            <summary>
            A boolean that specifies whether MongoDB applied an index filter for the query shape.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlanner.WinningPlan">
            <summary>
            A document that details the plan selected by the query optimizer. MongoDB presents the plan as a tree of stages; i.e. a stage can have an inputStage or, if the stage has multiple child stages, inputStages.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlanner.RejectedPlans">
            <summary>
            Array of candidate plans considered and rejected by the query optimizer. The array can be empty if there were no other candidate plans.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.QueryPlanner.AdditionalData">
            <summary>
            Gets or sets the additional data.
            </summary>
            <value>
            The additional data.
            </value>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.CanStartConsumers">
            <summary>
            Gets boolean indicator whether message hub can start consumers.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.CanPublish">
            <summary>
            Gets boolean indicator whether message hub can publish messages.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.IsConnectionBlocked">
            <summary>
            Gets boolean indicator of blocked connection. No publishing can occur when connection is blocked.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.ConnectionBlockedReason">
            <summary>
            Gets descriptive reason for blocked connection.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.SystemCommandQueueName">
            <summary>
            Gets the system command queue name used by current service instance.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.DefaultExchangeName">
            <summary>
            Gets the default name of the MQ direct exchange used by message publisher.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.DefaultTopicExchangeName">
            <summary>
            Gets the default name of the MQ topic exchange used by message publisher.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.ForwardExchangeName">
            <summary>
            Gets the name of the MQ forward exchange used by message publisher.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.DefaultDelayExchangeName">
            <summary>
            Gets the default name of the MQ exchange used by message publisher to deliver messages with delay.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.ForwardDelayExchangeName">
            <summary>
            Gets the name of the MQ forward exchange used by message publisher to deliver forwarded messages with delay.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.DefaultDelayQueueName">
            <summary>
            Gets the default name of the MQ queue used by message publisher to deliver messages with delay.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.ForwardDelayQueueName">
            <summary>
            Gets the name of the MQ forward queue used by message publisher to deliver forwarded messages.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.DefaultSysCommandsExchangeName">
            <summary>
            Gets the default name of the MQ exchange used by message publisher to deliver system commands messages to all services.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.DefaultSysCommandsQueueNamePrefix">
            <summary>
            Gets the default name prefix of the MQ queue used by message publisher to deliver system commands messages to all services.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.ForwardEventsQueueName">
            <summary>
            Gets the MQ queue used to forward messages for all services to appropriate DataSync service.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.FakeMessageHub.BoundedContext">
            <summary>
            Gets the bounded context that message hub is created for.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeMessageHub.Publish(TaxHub.Common.EventStore.DomainEventData)">
            <summary>
            Method publishes message into a queuing infrastructure, configured exchange. Returns boolean value as indication of success.
            </summary>
            <param name="eventData">The event data to publish.</param>
            <remarks>
                <para>The listeners will be invoked for all messages, therefore, for example, all messages will be written to the event store.
                      But only pre-configured messages will be published to the exchange.
                      Because this is desired application behavior that is based on configuration, this method will return success in either way,
                      but a verbose message is written to the log for debugging purposes.</para>
            </remarks>
            <returns>Returns boolean value as indication of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeMessageHub.Publish(TaxHub.Common.EventStore.DomainEventData,System.Boolean)">
            <summary>
            Method publishes message into a queuing infrastructure, configured exchange. Returns boolean value as indication of success.
            </summary>
            <param name="eventData">The event data to publish.</param>
            <param name="ackPublish">
                <para>Instructs the publish method whether it should require the RabbitMQ server to acknowledge the publish. The true forces the acknowledgement. By default is false.</para>
                <para>The publish acknowledge is the acknowledgement from the broker that your message was received, and written to disk, if persistence is required by the broker configuration.</para>
            </param>
            <remarks>
                <para>The listeners will be invoked for all messages, therefore, for example, all messages will be written to the event store.
                      But only pre-configured messages will be published to the exchange.
                      Because this is desired application behavior that is based on configuration, this method will return success in either way,
                      but a verbose message is written to the log for debugging purposes.</para>
                <para>The negative ackPublish value may be overridden by message route configuration.</para>
            </remarks>
            <returns>Returns boolean value as indication of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeMessageHub.Publish(System.Collections.Generic.IEnumerable{TaxHub.Common.EventStore.DomainEventData})">
            <summary>
            Method publishes multiple messages into a queuing infrastructure, configured exchange. Returns boolean value as indication of success.
            </summary>
            <param name="eventsData">The event data to publish.</param>
            <remarks>
                <para>The listeners will be invoked for all messages, therefore, for example, all messages will be written to the event store.
                      But only pre-configured messages will be published to the exchange.
                      Because this is desired application behavior that is based on configuration, this method will return success in either way,
                      but a verbose message is written to the log for debugging purposes.</para>
                <para>The negative ackPublish value may be overridden by message route configuration.</para>
                <para>The order of events is not preserved.</para>
            </remarks>
            <returns>Returns boolean value as indication of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeMessageHub.Publish(System.Collections.Generic.IEnumerable{TaxHub.Common.EventStore.DomainEventData},System.Boolean)">
            <summary>
            Method publishes multiple messages into a queuing infrastructure, configured exchange. Returns boolean value as indication of success.
            </summary>
            <param name="eventsData">The event data to publish.</param>
            <param name="ackPublish">
                <para>Instructs the publish method whether it should require the RabbitMQ server to acknowledge the publish. The true forces the acknowledgement. By default is false.</para>
                <para>The publish acknowledge is the acknowledgement from the broker that your message was received, and written to disk, if persistence is required by the broker configuration.</para>
            </param>
            <remarks>
                <para>The listeners will be invoked for all messages, therefore, for example, all messages will be written to the event store.
                      But only pre-configured messages will be published to the exchange.
                      Because this is desired application behavior that is based on configuration, this method will return success in either way,
                      but a verbose message is written to the log for debugging purposes.</para>
                <para>The negative ackPublish value may be overridden by message route configuration.</para>
                <para>The order of events is not preserved.</para>
            </remarks>
            <returns>Returns boolean value as indication of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeMessageHub.Publish(System.String,TaxHub.Common.EventStore.DomainEventData)">
            <summary>
            Method publishes message into a queuing infrastructure, named exchange. Returns boolean value as indication of success.
            </summary>
            <param name="exchangeName">The MQ exchange name to publish to. The exchange name is optional - the name configured in the route will be used.</param>
            <param name="eventData">The event data to publish.</param>
            <remarks>
                <para>The listeners will be invoked for all messages, therefore, for example, all messages will be written to the event store.
                      But only pre-configured messages will be published to the exchange.
                      Because this is desired application behavior that is based on configuration, this method will return success in either way,
                      but a verbose message is written to the log for debugging purposes.</para>
            </remarks>
            <returns>Returns boolean value as indication of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeMessageHub.Publish(System.String,TaxHub.Common.EventStore.DomainEventData,System.Boolean)">
            <summary>
            Method publishes message into a queuing infrastructure, named exchange. Returns boolean value as indication of success.
            </summary>
            <param name="exchangeName">The MQ exchange name to publish to. The exchange name is optional - the name configured in the route will be used.</param>
            <param name="eventData">The event data to publish.</param>
            <param name="ackPublish">
                <para>Instructs the publish method whether it should require the RabbitMQ server to acknowledge the publish. The true forces the acknowledgement. By default is false.</para>
                <para>The publish acknowledge is the acknowledgement from the broker that your message was received, and written to disk, if persistence is required by the broker configuration.</para>
            </param>
            <remarks>
                <para>The listeners will be invoked for all messages, therefore, for example, all messages will be written to the event store.
                      But only pre-configured messages will be published to the exchange.
                      Because this is desired application behavior that is based on configuration, this method will return success in either way,
                      but a verbose message is written to the log for debugging purposes.</para>
                <para>The negative ackPublish value may be overridden by message route configuration.</para>
            </remarks>
            <returns>Returns boolean value as indication of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeMessageHub.Publish(System.String,System.Collections.Generic.IEnumerable{TaxHub.Common.EventStore.DomainEventData},System.Boolean)">
            <summary>
            Method publishes multiple messages into a queuing infrastructure, named exchange. Returns boolean value as indication of success.
            </summary>
            <param name="exchangeName">The MQ exchange name to publish to. The exchange name is optional - the name configured in the route will be used.</param>
            <param name="eventsData">The event data to publish.</param>
            <param name="ackPublish">
                <para>Instructs the publish method whether it should require the RabbitMQ server to acknowledge the publish. The true forces the acknowledgement. By default is false.</para>
                <para>The publish acknowledge is the acknowledgement from the broker that your message was received, and written to disk, if persistence is required by the broker configuration.</para>
            </param>
            <remarks>
                <para>The listeners will be invoked for all messages, therefore, for example, all messages will be written to the event store.
                      But only pre-configured messages will be published to the exchange.
                      Because this is desired application behavior that is based on configuration, this method will return success in either way,
                      but a verbose message is written to the log for debugging purposes.</para>
                <para>The negative ackPublish value may be overridden by message route configuration.</para>
                <para>The order of events is not preserved.</para>
            </remarks>
            <returns>Returns boolean value as indication of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeMessageHub.Subscribe(System.String,System.String,TaxHub.Messaging.ISimpleMessageSubscriber)">
            <summary>
            Method subscribes a subscriber to the event.
            </summary>
            <param name="queueName">The queue name to subscribe to.</param>
            <param name="eventName">The event name to subscribe to.</param>
            <param name="subscriber">The event subscriber to subscribe.</param>
            <returns>Returns boolean value as indication of success.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.DomainEventDataTestExtensions.ToTestJson(TaxHub.Common.EventStore.DomainEventData)">
            <summary>
            Method saves event as JSON file event-name.json at DomainEventData directory.
            </summary>
            <param name="evtData">The event data</param>
            <returns>Returns serialized event data.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.ConventionAssert.ThrowsNull(NUnit.Framework.TestDelegate,System.String)">
            <summary>
            Checks to see if an exception of type <see cref="T:System.ArgumentNullException"/> is thrown.
            </summary>
            <param name="code">Delegate to test.</param>
            <param name="expectedMessage">Message expected to </param>
            <returns>The Message from the thrown exception.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.ConventionAssert.ThrowsNull(NUnit.Framework.AsyncTestDelegate,System.String)">
            <summary>
            Checks to see if an exception of type <see cref="T:System.ArgumentNullException"/> is thrown.
            </summary>
            <param name="code">Async delegate to test.</param>
            <param name="expectedMessage">Message expected to </param>
            <returns>The Message from the thrown exception.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.EntitlementScannerBase.ScanApiControllersForMissingEntitlements(System.Reflection.Assembly)">
            <summary>
            Method scans the assembly for API controllers and their methods that have no entitlement related attributes.
            </summary>
            <param name="apiAssembly">The assembly to scan.</param>
            <returns>Returns the list of strings with Controller+Action missing the entitlement attribute.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.HandlerMock">
            <summary>
            Class provides ability to create a fake for an inner and/or outer DelegatingHandler to tests the Web Api pipeline.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.HandlerMock.AssertResponse(System.Net.Http.HttpResponseMessage)">
            <summary>
            Method sets a response that inner handler suppose to return.
            </summary>
            <param name="response">The response to return.</param>
            <returns>Returns the DelegatingHandler itself.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.HandlerMock.InvokeSendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Method invokes protected SendAsync for the handler. This allows to start pipeline call in the middle of it.
            </summary>
            <remarks>The SendAsync method either returns pre-set response, or calls the SendAsync of inner handler.</remarks>
            <param name="request">The request to send through.</param>
            <param name="cancellationToken">The cancellation token to use - can be new token.</param>
            <returns>Returns the HttpResponseMessage object.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.IntegrationTestBase.QuickCreatePeriodicTaxInstance(System.Decimal)">
            <summary>
            This method is particularly useful if you have UTE synced with SSP already.
            This will create a valid import payroll with some FUTA amount that can be
            processed and will generate the collection needed in SSP. It will choose the
            first active payroll unit it finds and its respective client and tenant info.
            In other words this is a quick and dirty way to get an import payroll without
            closing a payroll in ultipro and without plugging in references into a SQL scripts
            to make it work with SSP.
            </summary>
            <param name="irsAmount">irs amount.</param>
            <returns>Periodic Tax Instance.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.IntegrationTestBase.InitializeCoreServiceContainer">
            <summary>
            Initializes the core service container.
            </summary>
            <returns>The container.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.IntegrationTestBase.SetUpCoreServiceContainer(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes the core service container.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:TaxHub.TestHelpers.IntegrationTestBase.LoadStreamFromResources(System.String)">
            <summary>
            Loads a string stored as an embedded resource.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The text of the first embedded resource with this name</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.IntegrationTestBase.SetupDatabaseConnectivity">
            <summary>
            Setup the database connectivity provider in the container.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.LoggerHelper.GetTestLogger">
            <summary>
            Gets the test logger, which is mocked out to return itself on
            any of the calls the normally return a new logger.
            </summary>
            <returns>An IAppLogger useful for testing.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.LoggerHelper.GetThreadSafeLogger">
            <summary>
            Gets a thread safe test logger, which is mocked out to return itself on
            any of the calls the normally return a new logger.
            </summary>
            <returns>An IAppLogger useful for testing.</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.FakeExtensions">
            <summary>
            Fake It Easy extension methods.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.FakeExtensions.GetThreadSafeFake``1(FakeItEasy.Fake{``0})">
            <summary>
            Gets a thread safe fake.
            </summary>
            <typeparam name="T">Type or Interface</typeparam>
            <param name="fake">The fake.</param>
            <returns>A thread safe fake.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.CallSynchronizer.OnBeforeCallIntercepted(FakeItEasy.Core.IFakeObjectCall)">
            <summary>
            Called when the interception begins but before any call rules
                        has been applied.
            </summary>
            <param name="interceptedCall">The intercepted call.</param>
        </member>
        <member name="M:TaxHub.TestHelpers.CallSynchronizer.OnAfterCallIntercepted(FakeItEasy.Core.ICompletedFakeObjectCall,FakeItEasy.Core.IFakeObjectCallRule)">
            <summary>
            Called when the interception has been completed and rules has been
                        applied.
            </summary>
            <param name="interceptedCall">The intercepted call.</param><param name="ruleThatWasApplied">The rule that was applied to the call.</param>
        </member>
        <member name="M:TaxHub.TestHelpers.SqlHelper.ExecuteScalar``1(System.String)">
            <summary>
            Executes a query and returns a scalar value.
            </summary>
            <param name="sql">The SQL query.</param>
            <typeparam name="T">The type to materialize the scalar value as.</typeparam>
            <returns>The materialized value.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.SqlHelper.ExecuteScalar``1(System.String,System.Data.IDbDataParameter[])">
            <summary>
            Executes a query and returns a scalar value.
            </summary>
            <param name="sql">The parameterized SQL query.</param>
            <param name="parameters">The parameters.</param>
            <typeparam name="T">The type to materialize the scalar value as.</typeparam>
            <returns>The materialized value.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.SqlHelper.ExecuteReaderAndGetResults(System.String)">
            <summary>
            Executes a SQL Query and returns all data in a list
            </summary>
            <param name="sql"></param>
            <returns>the result set of the query</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.SqlHelper.CreateSnapshot">
            <summary>
            Creates a database snapshot in the same directory as the source database if the database does not already have other snapshots attached.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.SqlHelper.DeleteSnapshot">
            <summary>
            Deletes the database snapshot created by CreateSnapshot if it verifies it exists and is an attached snapshot to the database.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.SqlHelper.GetDatabaseDirectory">
            <summary>
            Gets the full directory path where the database file is located.
            </summary>
            <returns>Full directory path of database file.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.SqlHelper.RevertToSnapshot">
            <summary>
            Reverts the database to oldest snapshot attached to the database.
            <para>WARNING: This operation closes all connections to the database.</para>
            <para>WARNING: Due to SQL Server requirements, this will first delete all snapshots attached to the database except the oldest snapshot which will be reverted to and remain.</para>
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.TestObjectStoreServiceClient.Timeout">
            <summary>
            The HttpClient Timeout
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.TestObjectSetupHelper.PopulateTaxMappingInfoCacheableData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Populates all tables relevant to the cached tax information. Aside from the ClientParentChild table, all other tables are created in proportion to the clients and agencies based on a snapshot of the prod data.
            </summary>
            <param name="numberOfClients">number of clients to generate</param>
            <param name="numberOfAgencies">number of agencies to generate</param>
            <param name="numberOfClientParentChilds">number of clientParentChild entries to generate</param>
            <param name="numberOfClientParents">number of parents to choose from in the clientParentChild entries</param>
            <param name="numberOfClientChildren">number of children to choose from in the clientParentChild entries</param>
            <param name="includeOutliers">prods data includes lacks uniformity, including outliers more accurately reflects the outliers in prod</param>
        </member>
        <member name="T:TaxHub.TestHelpers.TestResultsLogger.PerformanceTestResultCollection">
            <summary>
            The performance test result data to be logged and serialized as JSON.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.TestResultsLogger.PerformanceTestResult.AverageDuration">
            <summary>
            Test duration average in milliseconds.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.TestResultsLogger.PerformanceTestResult.MaxDurationAllowed">
            <summary>
            Expected maximum duration in milliseconds.
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.TestResultsLogger.TestResultsToArtifactoryLogger.ArtifactoryUri">
            <summary>
            Location on Artifactory where the results of the tests will be stored
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.TestResultsLogger.TestResultsToArtifactoryLogger.PutResourceInArtifactory(System.String)">
            <summary>
            Does a PUT request to the artifactory location with the JsonOutput string.
            The artifactory location is speficied in appSettings["PerformanceTestResultsArtifactoryPath"].
            </summary>
            <param name="resourceName"></param>
        </member>
        <member name="M:TaxHub.TestHelpers.TestResultsLogger.TestResultsToArtifactoryLogger.FindNewResourceName">
            <summary>
            Does a GET request to the artifactory location to see if a certain resource exists.
            If response code is Success (HttpCode=200): The resource exists in artifactory and a different resourceName must be generated
                by incrementing the sequence number and doing another GET request.
            If respone code is Not Found (HttpCode=404): The resource does not exists and can be used to store the JsonOutput string.
            If response code is something else: Return empty string. This is an unexpected behavior.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.TestResultsLogger.TestResultsToArtifactoryLogger.Save">
            <summary>
            Saves the JsonOutput into the artifactory location.
            The artifactory location is speficied in appSettings["PerformanceTestResultsArtifactoryPath"].
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.TestResultsLogger.TestResultsToJsonLogger.Log(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Log the test result data into memory.
            </summary>
            <param name="executionTime"></param>
            <param name="maxDurationAllowed"></param>
            <param name="stepName"></param>
            <param name="testName"></param>
        </member>
        <member name="M:TaxHub.TestHelpers.TestResultsLogger.TestResultsToJsonLogger.Save">
            <summary>
            Generate the JsonOutput string from the performance test logs stored in memory.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.TestResultsLogger.TestResultsToJsonLogger.AssemblePerformanceTestResultCollection(System.Collections.Generic.Dictionary{System.String,TaxHub.TestHelpers.TestResultsLogger.PerformanceTestResult})">
            <summary>
            Transforms the data stored in <see cref="F:TaxHub.TestHelpers.TestResultsLogger.TestResultsToJsonLogger.testResultsData"/> into a <see cref="T:TaxHub.TestHelpers.TestResultsLogger.PerformanceTestResultCollection"/> object.
            The <see cref="T:TaxHub.TestHelpers.TestResultsLogger.PerformanceTestResultCollection"/> is a tree-like structure in which a 'Parent' test result has a list of 'Steps' which subsequently each of them may have a list of 'Steps'.
            This method iterates the objects stored in <see cref="F:TaxHub.TestHelpers.TestResultsLogger.TestResultsToJsonLogger.testResultsData"/>, groups and allocates them in their corresponding 'Steps'.
            </summary>
            <example>
            For the following entries in <see cref="F:TaxHub.TestHelpers.TestResultsLogger.TestResultsToJsonLogger.testResultsData" />:
                Key: ParentTest.ChildStep1
                Key: ParentTest.ChildStep2
                Key: ParentTest.ChildStep3
                Key: ParentTest.ChildStep3.GrandChildStepA
            Will result in the following object structure:
            <code>
            {
                testResults:[
                    {
                        name:"ParentTest",
                        steps: [
                            { name: "ChildStep1" },
                            { name: "ChildStep2" },
                            {
                                name: "ChildStep3",
                                steps: [ { name: "GrandChildStepA"} ]
                            }
                        ]
                    }
                ]
            }
            </code>
            </example>
            <param name="testResultsData"></param>
            <returns>A <see cref="T:TaxHub.TestHelpers.TestResultsLogger.PerformanceTestResultCollection"/> that can be serialized into JSON.</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.TestResultsLogger.TestResultsToJsonFileLogger.Save">
            <summary>
            Saves the JsonOuput string into a file.
            The file storage location is specified in appSettings["PerformanceTestResultsBaseDirectory"].
            </summary>
        </member>
        <member name="T:TaxHub.TestHelpers.TestSessionStateServiceAdapter">
            <summary>
            Custom implementation using a Dictionary 
            </summary>
        </member>
        <member name="P:TaxHub.TestHelpers.TestSessionStateServiceAdapter.Count">
            <inheritdoc cref="P:PTMCommon.SessionService.ISessionStateServiceAdapter.Count"/>
        </member>
        <member name="M:TaxHub.TestHelpers.TestSetupHelper.GetFakeLogger">
            <summary>
            Gets the fake logger, with fluent method calls setup to return the same fake. Useful
            for testing logs which use the fluent interface.
            </summary>
            <returns>Returns a fake logger .</returns>
        </member>
        <member name="T:TaxHub.TestHelpers.UiRetryHelper">
            <summary>
            Helper class for calling UI actions with retry. e.g. Open a modal, check for value.
            If value not there, close modal and try again after a short sleep.
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.UiRetryHelper.RetryUiAction(System.Action,System.Action)">
            <summary>
            Retries a UI action after a 2 second sleep. Default stopwatch elapsed time of 30000 MS.
            </summary>
            <param name="setupAction">The action to setup UI (e.g. open modal, set value)</param>
            <param name="assertAction">The action where we assert values on the UI.</param>
        </member>
        <member name="M:TaxHub.TestHelpers.UiRetryHelper.RetryUiAction(System.Action,System.Action,System.Action)">
            <summary>
            Retries a UI action after a 2 second sleep. Default stopwatch elapsed time of 30000 MS.
            </summary>
            <param name="setupAction">The action to setup UI (e.g. open modal, set value)</param>
            <param name="assertAction">The action where we assert values on the UI.</param>
            <param name="tearDownAction">The action to teardown (e.g. close modal).</param>
        </member>
        <member name="M:TaxHub.TestHelpers.UiRetryHelper.RetryUiAction(System.Action,System.Action,System.Action,System.Action)">
            <summary>
            Retries a UI action after a 2 second sleep. Default stopwatch elapsed time of 30000 MS.
            </summary>
            <param name="setupAction">The action to setup UI (e.g. open modal, set value)</param>
            <param name="assertAction">The action where we assert values on the UI.</param>
            <param name="tearDownAction">The action to teardown (e.g. close modal).</param>
            <param name="exceptionCleanupAction">The action to perform if a timeout exception occurs.</param>
        </member>
        <member name="M:TaxHub.TestHelpers.UiRetryHelper.RetryUiAction(System.Int32,System.Action,System.Action,System.Action)">
            <summary>
            Retries a UI action after a 2 second sleep.
            </summary>
            <param name="stopWatchElapsedMs">The total number of milliseconds to wait.</param>
            <param name="setupAction">The action to setup UI (e.g. open modal, set value)</param>
            <param name="assertAction">The action where we assert values on the UI.</param>
            <param name="tearDownAction">The action to teardown (e.g. close modal).</param>
        </member>
        <member name="M:TaxHub.TestHelpers.UiRetryHelper.RetryUiAction(System.Int32,System.Action,System.Action,System.Action,System.Action)">
            <summary>
            Retries a UI action after a 2 second sleep.
            </summary>
            <param name="stopWatchElapsedMs">The total number of milliseconds to wait.</param>
            <param name="setupAction">The action to setup UI (e.g. open modal, set value)</param>
            <param name="assertAction">The action where we assert values on the UI.</param>
            <param name="tearDownAction">The action to teardown (e.g. close modal).</param>
            <param name="exceptionCleanupAction">
            The action to perform if a timeout exception occurs.
            In most cases this should probably do the same thing as the tearDownAction (e.g. close a modal)
            </param>
        </member>
        <member name="M:TaxHub.TestHelpers.UnityContainerHelper.CoreServicesInitializeUnityContainer(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initialize unity container
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:TaxHub.TestHelpers.UnityContainerHelper.InitializeUnityContainerDictionary">
            <summary>
            Call this method in the OneTimeSetup method before calling InitializeUnityContainerByCurrentTest to initialize a unity container dictionary for the given AppDomain
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.UnityContainerHelper.InitializeUnityContainerByCurrentTest">
            <summary>
            Call this method in the Setup method before calling GetUnityContainerByCurrentTest to initialize the UnityContainer by test id
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.UnityContainerHelper.GetUnityContainerByCurrentTest">
            <summary>
            Call this method to retrieve the UnityContainer related to the given test id 
            </summary>
            <returns>UnityContainer</returns>
        </member>
        <member name="M:TaxHub.TestHelpers.UnityContainerHelper.DisposeUnityContainerByCurrentTest">
            <summary>
            Call this method to dispose the UnityContainer related to the given test id 
            </summary>
        </member>
        <member name="T:TaxHub.TestHelpers.TestUteSiteMapProvider">
            <summary>
            Subclass of UteSiteMapProvider used by tests to inject fake dependencies
            </summary>
        </member>
        <member name="M:TaxHub.TestHelpers.TestUteSiteMapProvider.GetContextBase(System.Web.HttpContext)">
            <summary>
            Uses an injected Http Context provider to generate a context. 
            If none found or generated it uses the one passed in. 
            </summary>
            <param name="context">HttpContext</param>
            <returns>Base HttpContex</returns>
        </member>
    </members>
</doc>
