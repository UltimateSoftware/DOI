<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Reporting.TestHelpers</name>
    </assembly>
    <members>
        <member name="M:Reporting.TestHelpers.DomainEventDataTestExtensions.ToTestJson(TaxHub.Common.EventStore.DomainEventData)">
            <summary>
            Method saves event as JSON file event-name.json at DomainEventData directory.
            </summary>
            <param name="evtData">The event data</param>
            <returns>Returns serialized event data.</returns>
        </member>
        <member name="M:Reporting.TestHelpers.IntegrationTestBase.LoadStringFromResource(System.String)">
            <summary>
            Loads a string stored as an embedded resource.
            </summary>
            <param name="resource">Name of the resource.</param>
            <returns>The text of the embedded resource with this name</returns>
        </member>
        <member name="M:Reporting.TestHelpers.IntegrationTestBase.LoadStringFromResourcesMatchingFileName(System.String)">
            <summary>
            Loads a string stored as an embedded resource.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The text of the first embedded resource with this name</returns>
        </member>
        <member name="M:Reporting.TestHelpers.IntegrationTestBase.LoadStreamFromResources(System.String,System.Reflection.Assembly)">
            <summary>
            Loads a stream stored as an embedded resource.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="assembly">The assembly that contains the reource.</param>
            <returns>
            The stream of the first embedded resource with this name
            </returns>
        </member>
        <member name="T:Reporting.TestHelpers.ObjectExtensions">
            <summary>
            GuidExtensions
            </summary>
        </member>
        <member name="M:Reporting.TestHelpers.ObjectExtensions.ToGuid(System.Object)">
            <summary>
            ObjectToGuid
            </summary>
            <param name="item">item</param>
            <returns>Guid</returns>
        </member>
        <member name="M:Reporting.TestHelpers.SqlHelper.ExecuteQuery(System.Data.SqlClient.SqlCommand)">
             <summary>
            
             </summary>
             <param name="sqlcommand"></param>
             <returns>
             Returns a List of Rows. Each Row is a list of Pairs. Each Pair contains columns name and value.
             </returns>
        </member>
        <member name="M:Reporting.TestHelpers.SqlHelper.ExecuteQueryMultipleResultSets(System.Data.SqlClient.SqlCommand)">
            <summary>
            Executes a query and returns the result which can have multiple result sets.
            </summary>
            <param name="sqlcommand"></param>
            <returns>
            Returns a List of Result Sets.
            A Result Set is represented as a List of Rows.
            A Row is represented as a list of Columns.
            A Column represented as a Pair of string and object, the column name is the string and the value is the object.
            </returns>
        </member>
        <member name="M:Reporting.TestHelpers.WindowsServiceHelper.StartSqlServerAgent">
            <summary>
            Attempts to starts SQLSERVERAGENT service if its status is different from [RUNNING].
            </summary>
            <returns>
            Returns TRUE if the status SQLServerAgent service was equal to [RUNNING] timeout specified. Else, it throws a System.TimeoutException().
            </returns>
        </member>
        <member name="M:Reporting.TestHelpers.WindowsServiceHelper.StartService(System.String,System.Int64)">
            <summary>
            Attempts to starts a Windows service if its status is different from [RUNNING].
            </summary>
            <param name="serviceName"></param>
            <param name="timeoutmilliseconds"></param>
            <returns>Returns TRUE if the status of the service was equal to [RUNNING] within the timeout specified. Else, it returns FALSE.</returns>
        </member>
    </members>
</doc>
