<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TaxHub.DataflowManager</name>
    </assembly>
    <members>
        <member name="F:TaxHub.DataflowManager.DataflowMessageStatus.Accepted">
            <summary>
            Indicates that the System.Threading.Tasks.Dataflow.ITargetBlock accepted the
            message. Once a target has accepted a message, it is wholly owned by the target
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowMessageStatus.Declined">
            <summary>
             Indicates that the System.Threading.Tasks.Dataflow.ITargetBlock declined the message.
             The ISourceBlock still owns the message
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowMessageStatus.Postponed">
            <summary>
            Indicates that the ITargetBlock postponed the message for potential consumption at a later time.
            The ISourceBlock still owns the message.
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowMessageStatus.NotAvailable">
            <summary>
            Indicates that the ITargetBlock tried to accept message from ISourceBlock
            but the message was no longer available
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowMessageStatus.DecliningPermanently">
            <summary>
            Indicates that the ITargetBlock declined the message. 
            The ISourceBlock still owns the message.
            ADOItionally, the ITargetblock will decline all future messages sent by the source
            </summary>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowLinkOptions.Append">
            <summary>
            Gets or sets whether the link should be appended to the 
            sourceâ€™s list of links, or whether it should be prepended.
            </summary>
            <value>
              <c>true</c> if append; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowLinkOptions.MaxMessages">
            <summary>
            Gets or sets the maximum number of messages that may be consumed across the link.
            </summary>
            <value>
            The maximum messages.
            </value>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowLinkOptions.PropagateCompletion">
            <summary>
            Gets or sets whether the linked target will have completion 
            and faulting notification propagated to it automatically
            </summary>
            <value>
              <c>true</c> if [propagate completion]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:TaxHub.DataflowManager.DataflowSectionOptions">
            <summary>
            Provides options used to configure the processing performed by dataflow blocks.
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowSectionOptions.Unbounded">
            <summary>
            A constant used to specify an unlimited quantity for <see cref="T:TaxHub.DataflowManager.DataflowSectionOptions"/> members 
            that provide an upper bound. This field is constant.
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowSectionOptions._taskScheduler">
            <summary>The scheduler to use for scheduling tasks to process messages.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowSectionOptions._cancellationToken">
            <summary>The cancellation token to monitor for cancellation requests.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowSectionOptions._maxMessagesPerTask">
            <summary>The maximum number of messages that may be processed per task.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowSectionOptions._boundedCapacity">
            <summary>The maximum number of messages that may be buffered by the block.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowSectionOptions._nameFormat">
            <summary>The name format to use for creating a name for a block.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowSectionOptions._ensureOrdered">
            <summary>Whether to force ordered processing of messages.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.DataflowSectionOptions.Default">
            <summary>A default instance of <see cref="T:TaxHub.DataflowManager.DataflowSectionOptions"/>.</summary>
            <remarks>
            Do not change the values of this instance.  It is shared by all of our blocks when no options are provided by the user.
            </remarks>
        </member>
        <member name="M:TaxHub.DataflowManager.DataflowSectionOptions.DefaultOrClone">
            <summary>Returns this <see cref="T:TaxHub.DataflowManager.DataflowSectionOptions"/> instance if it's the default instance or else a cloned instance.</summary>
            <returns>An instance of the options that may be cached by the block.</returns>
        </member>
        <member name="M:TaxHub.DataflowManager.DataflowSectionOptions.#ctor">
            <summary>Initializes the <see cref="T:TaxHub.DataflowManager.DataflowSectionOptions"/>.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowSectionOptions.TaskScheduler">
            <summary>Gets or sets the <see cref="T:System.Threading.Tasks.TaskScheduler"/> to use for scheduling tasks.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowSectionOptions.CancellationToken">
            <summary>Gets or sets the <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowSectionOptions.MaxMessagesPerTask">
            <summary>Gets or sets the maximum number of messages that may be processed per task.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowSectionOptions.ActualMaxMessagesPerTask">
            <summary>Gets a MaxMessagesPerTask value that may be used for comparison purposes.</summary>
            <returns>The maximum value, usable for comparison purposes.</returns>
            <remarks>Unlike MaxMessagesPerTask, this property will always return a positive value.</remarks>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowSectionOptions.BoundedCapacity">
            <summary>Gets or sets the maximum number of messages that may be buffered by the block.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowSectionOptions.NameFormat">
            <summary>
            Gets or sets the format string to use when a block is queried for its name.
            </summary>
            <remarks>
            The name format may contain up to two format items. {0} will be substituted 
            with the block's name. {1} will be substituted with the block's Id, as is 
            returned from the block's Completion.Id property.
            </remarks>
        </member>
        <member name="P:TaxHub.DataflowManager.DataflowSectionOptions.EnsureOrdered">
            <summary>Gets or sets whether ordered processing should be enforced on a block's handling of messages.</summary>
            <remarks>
            By default, dataflow blocks enforce ordering on the processing of messages. This means that a
            block like <see cref="T:TaxHub.DataflowManager.TransformSection`2"/> will ensure that messages are output in the same
            order they were input, even if parallelism is employed by the block and the processing of a message N finishes 
            after the processing of a subsequent message N+1 (the block will reorder the results to maintain the input
            ordering prior to making those results available to a consumer).  Some blocks may allow this to be relaxed,
            however.  Setting <see cref="P:TaxHub.DataflowManager.DataflowSectionOptions.EnsureOrdered"/> to false tells a block that it may relax this ordering if
            it's able to do so.  This can be beneficial if the immediacy of a processed result being made available
            is more important than the input-to-output ordering being maintained.
            </remarks>
        </member>
        <member name="T:TaxHub.DataflowManager.GroupingDataflowSectionOptions">
            <summary>
            Provides options used to configure the processing performed by dataflow blocks that
            group together multiple messages, blocks such as <see cref="T:TaxHub.DataflowManager.JoinSection`1"/> and 
            </summary>
            <remarks>
            <see cref="T:TaxHub.DataflowManager.GroupingDataflowSectionOptions"/> is mutable and can be configured through its properties.  
            When specific configuration options are not set, the following defaults are used:
            <list type="table">
                <listheader>
                    <term>Options</term>
                    <description>Default</description>
                </listheader>
                <item>
                    <term>TaskScheduler</term>
                    <description><see cref="P:System.Threading.Tasks.TaskScheduler.Default"/></description>
                </item>
                <item>
                    <term>CancellationToken</term>
                    <description><see cref="P:System.Threading.CancellationToken.None"/></description>
                </item>
                <item>
                    <term>MaxMessagesPerTask</term>
                    <description>DataflowBlockOptions.Unbounded (-1)</description>
                </item>
                <item>
                    <term>BoundedCapacity</term>
                    <description>DataflowBlockOptions.Unbounded (-1)</description>
                </item>
                <item>
                    <term>NameFormat</term>
                    <description>"{0} Id={1}"</description>
                </item>
                <item>
                    <term>EnsureOrdered</term>
                    <description>true</description>
                </item>
                <item>
                    <term>MaxNumberOfGroups</term>
                    <description>GroupingDataflowSectionOptions.Unbounded (-1)</description>
                </item>
                <item>
                    <term>Greedy</term>
                    <description>true</description>
                </item>
            </list>
            Dataflow block capture the state of the options at their construction.  Subsequent changes
            to the provided <see cref="T:TaxHub.DataflowManager.GroupingDataflowSectionOptions"/> instance should not affect the behavior
            of a dataflow block.
            </remarks>
        </member>
        <member name="F:TaxHub.DataflowManager.GroupingDataflowSectionOptions.Default">
            <summary>A default instance of <see cref="T:TaxHub.DataflowManager.DataflowSectionOptions"/>.</summary>
            <remarks>
            Do not change the values of this instance.  It is shared by all of our blocks when no options are provided by the user.
            </remarks>
        </member>
        <member name="M:TaxHub.DataflowManager.GroupingDataflowSectionOptions.DefaultOrClone">
            <summary>Returns this <see cref="T:TaxHub.DataflowManager.GroupingDataflowSectionOptions"/> instance if it's the default instance or else a cloned instance.</summary>
            <returns>An instance of the options that may be cached by the block.</returns>
        </member>
        <member name="F:TaxHub.DataflowManager.GroupingDataflowSectionOptions._greedy">
            <summary>Whether the block should greedily consume offered messages.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.GroupingDataflowSectionOptions._maxNumberOfGroups">
            <summary>The maximum number of groups that should be generated by the block.</summary>
        </member>
        <member name="M:TaxHub.DataflowManager.GroupingDataflowSectionOptions.#ctor">
            <summary>Initializes the <see cref="T:TaxHub.DataflowManager.GroupingDataflowSectionOptions"/>.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.GroupingDataflowSectionOptions.Greedy">
            <summary>Gets or sets the Boolean value to use to determine whether to greedily consume offered messages.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.GroupingDataflowSectionOptions.MaxNumberOfGroups">
            <summary>Gets or sets the maximum number of groups that should be generated by the block.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.GroupingDataflowSectionOptions.ActualMaxNumberOfGroups">
            <summary>Gets a MaxNumberOfGroups value that may be used for comparison purposes.</summary>
            <returns>The maximum value, usable for comparison purposes.</returns>
            <remarks>Unlike MaxNumberOfGroups, this property will always return a positive value.</remarks>
        </member>
        <member name="T:TaxHub.DataflowManager.JoinSection`1">
            <summary>
            
            </summary>
            <typeparam name="TInput"></typeparam>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.source">
            <summary>The source side.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.target">
            <summary>The target side.</summary>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.#ctor(System.Func{`0,`0},System.Func{`0,System.String})">
            <summary>
            Constructor 
            </summary>
            <param name="func">The func to execute</param>
            <param name="groupingKey">The grouping key</param>
        </member>
        <member name="P:TaxHub.DataflowManager.JoinSection`1.Completion">
            <summary>
            Completion Task
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.LinkTo(TaxHub.DataflowManager.ITargetSection{TaxHub.DataflowManager.Section{`0}},TaxHub.DataflowManager.DataflowLinkOptions)">
            <summary>
            Links the source block to a target block
            </summary>
            <param name="target">The target</param>
            <param name="linkOptions">Indicates the different link options</param>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.LinkTo(TaxHub.DataflowManager.ITargetSection{TaxHub.DataflowManager.Section{`0}},System.Predicate{TaxHub.DataflowManager.Section{`0}},TaxHub.DataflowManager.DataflowLinkOptions)">
            <summary>
            Links the source block to a target block
            </summary>
            <param name="target">The target</param>
            <param name="condition">The link conditions</param>
            <param name="linkOptions">Indicates the different link options</param>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.Send(`0)">
            <summary>
            Send task
            </summary>
            <param name="input">Input data type</param>
            <returns></returns>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.OfferMessage(`0,TaxHub.DataflowManager.ISourceSection{`0},System.Boolean)">
            <summary>
            Offers a message to the block, it can consume or postpone the messahe 
            </summary>
            <param name="messageValue">Value of the message being offered</param>
            <param name="source">The offering message</param>
            <param name="consumeToAccept">Indicate if the message will be accepted</param>
            <returns></returns>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.Complete">
            <summary>
            Complete task
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.Fault(System.Exception)">
            <summary>
            Failt task
            </summary>
            <param name="exception">Exception thrown</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.TaxHub#DataflowManager#ISourceSection{TaxHub#DataflowManager#Section{TInput}}#LinkTo(TaxHub.DataflowManager.ITargetSection{TaxHub.DataflowManager.Section{`0}},TaxHub.DataflowManager.DataflowLinkOptions)">
            <summary>
            Links the source block to a target block
            </summary>
            <param name="target">Target block</param>
            <param name="linkOptions">Link options, configuration</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.ConsumeMessage(TaxHub.DataflowManager.ITargetSection{TaxHub.DataflowManager.Section{`0}},System.Boolean@)">
            <summary>
            Consumes a message
            </summary>
            <param name="target">The target block</param>
            <param name="messageConsumed">The message that was consumed</param>
            <returns>Input Data Type</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.TaxHub#DataflowManager#ISourceSection{TaxHub#DataflowManager#Section{TInput}}#ConsumeMessage(TaxHub.DataflowManager.ITargetSection{TaxHub.DataflowManager.Section{`0}},System.Boolean@)">
            <summary>
            Consumes a message
            </summary>
            <param name="target">The target block</param>
            <param name="messageConsumed">The message that was consumed</param>
            <returns>Input Data Type</returns>
        </member>
        <member name="T:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1">
            <summary>Provides the target used in a BatchedJoin.</summary>
            <typeparam name="T">Specifies the type of data accepted by this target.</typeparam>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1._sharedResources">
            <summary>The shared resources used by all targets associated with the same batched join instance.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1._decliningPermanently">
            <summary>Whether this target is declining future messages.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1._messages">
            <summary>Input messages for the next batch.</summary>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1.#ctor(System.Func{`0,System.String},System.Action{TaxHub.DataflowManager.Section{`1}})">
            <summary>Initializes the target.</summary>
        </member>
        <member name="P:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1.Count">
            <summary>Gets the number of messages buffered in this target.</summary>
        </member>
        <member name="T:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1.DebugView">
            <summary>Provides a debugger type proxy for the Transform.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1.DebugView._batchedJoinBlockTarget">
            <summary>The batched join block target being viewed.</summary>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1.DebugView.#ctor(TaxHub.DataflowManager.JoinSection{`0}.BatchedJoinSectionTarget{`1})">
            <summary>Initializes the debug view.</summary>
            <param name="batchedJoinBlockTarget">The batched join target being viewed.</param>
        </member>
        <member name="P:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTarget`1.DebugView.IsDecliningPermanently">
            <summary>Gets whether the block is declining further messages.</summary>
        </member>
        <member name="T:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources">
            <summary>Provides a container for resources shared across all targets used by the same BatchedJoinBlock instance.</summary>
        </member>
        <member name="M:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources.#ctor(TaxHub.DataflowManager.GroupingDataflowSectionOptions,System.Action,System.Action,System.Action{System.Exception},System.Action,System.Int32)">
            <summary>Initializes the shared resources.</summary>
            <param name="dataflowBlockOptions">The options used to configure the shared resources.  Assumed to be immutable.</param>
            <param name="batchSizeReachedAction">The action to invoke when a batch is completed.</param>
            <param name="allTargetsDecliningAction">The action to invoke when no more targets are accepting input.</param>
            <param name="exceptionAction">The action to invoke when an exception needs to be logged.</param>
            <param name="completionAction">The action to invoke when completing, typically invoked due to a call to Fault.</param>
            <param name="batchSize">The batch size</param>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._incomingLock">
            <summary>
            A lock used to synchronize all incoming messages on all targets. It protects all of the rest 
            of the shared Resources's state and will be held while invoking the delegates.
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._batchSize">
            <summary>The size of the batches to generate.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._batchSizeReachedAction">
            <summary>The action to invoke when enough elements have been accumulated to make a batch.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._allTargetsDecliningPermanentlyAction">
            <summary>The action to invoke when all targets are declining further messages.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._exceptionAction">
            <summary>The action to invoke when an exception has to be logged.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._completionAction">
            <summary>The action to invoke when the owning block has to be completed.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._remainingItemsInBatch">
            <summary>The number of items remaining to form a batch.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._remainingAliveTargets">
            <summary>The number of targets still alive (i.e. not declining all further messages).</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._decliningPermanently">
            <summary>Whether all targets should decline all further messages.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.JoinSection`1.BatchedJoinSectionTargetSharedResources._batchesCreated">
            <summary>The number of batches created.</summary>
        </member>
        <member name="T:TaxHub.DataflowManager.IDataflowSection">
            <summary>
            Represents the Dataflow block
            </summary>
        </member>
        <member name="P:TaxHub.DataflowManager.IDataflowSection.Completion">
            <summary>
            Gets a System.Threading.Tasks.Task that represents the asynchronous operation and completion of the dataflow block
            </summary>
            <value>
             The Task
            </value>
        </member>
        <member name="M:TaxHub.DataflowManager.IDataflowSection.Complete">
            <summary>
            Signals to the System.Threading.Tasks.Dataflow.IDataflowSection that it should 
            not accept nor produce any more messages nor consume any more postponed messages.
            </summary>
        </member>
        <member name="M:TaxHub.DataflowManager.IDataflowSection.Fault(System.Exception)">
            <summary>
            Causes the System.Threading.Tasks.Dataflow.IDataflowSection to complete in a System.Threading.Tasks.TaskStatus.Faulted state.
            </summary>
            <param name="exception">The System.Exception that caused the faulting.</param>
            Exceptions:
            T:System.ArgumentNullException: The exception is null
        </member>
        <member name="T:TaxHub.DataflowManager.ISection">
            <summary>
            Section Interface
            </summary>
        </member>
        <member name="M:TaxHub.DataflowManager.ISection.Count">
            <summary>
            Counts this instance.
            </summary>
            <returns> count as integer </returns>
        </member>
        <member name="M:TaxHub.DataflowManager.ISection.IsHeader">
            <summary>
            Determines whether this instance is header.
            </summary>
            <returns>
              <c>true</c> if this instance is header; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:TaxHub.DataflowManager.ISection.GetId">
            <summary>
            Gets the identifier.
            </summary>
            <returns> Id as string</returns>
        </member>
        <member name="T:TaxHub.DataflowManager.ISourceSection`1">
            <summary>
            Represents a dataflow block that is a source of data.
            </summary>
            <typeparam name="TOutput">Specifies the type of data supplied by the System.Threading.Tasks.Dataflow.ISourceBlock</typeparam>
        </member>
        <member name="M:TaxHub.DataflowManager.ISourceSection`1.ConsumeMessage(TaxHub.DataflowManager.ITargetSection{`0},System.Boolean@)">
            <summary>
            Called by a linked ITargetSection to accept and consume a T:DataflowMessageHeader
            previously offered by this ISourceBlock.
            </summary>
            <param name="target">The System.Threading.Tasks.Dataflow.ITargetSection consuming the message.</param>
            <param name="messageConsumed">true if the message was successfully consumed; otherwise, false.</param>
            <returns>
            The value of the consumed message. This may correspond to a different DataflowMessageHeader instance 
            than was previously reserved and passed as the messageHeader to ISourceBlock.ConsumeMessage.
            The consuming ITargetSection must use the returned value 
            instead of the value passed as messageValue through ITargetSection.OfferMessage
            If the message requested is not available, the return value will be null.
            </returns>
        </member>
        <member name="M:TaxHub.DataflowManager.ISourceSection`1.LinkTo(TaxHub.DataflowManager.ITargetSection{`0},TaxHub.DataflowManager.DataflowLinkOptions)">
            <summary>
            Links the ISourceBlock to the specified ITargetSection.
            </summary>
            <param name="target">The ITargetSection to which to connect this source.</param>
            <param name="linkOptions">A DataflowLinkOptions instance that configures the link.</param>
        </member>
        <member name="T:TaxHub.DataflowManager.ITargetSection`1">
            <summary>
            Represents a dataflow block that is a target for data.
            </summary>
            <typeparam name="TInput">Specifies the type of data accepted by the System.Threading.Tasks.Dataflow.ITargetSection</typeparam>
        </member>
        <member name="M:TaxHub.DataflowManager.ITargetSection`1.OfferMessage(`0,TaxHub.DataflowManager.ISourceSection{`0},System.Boolean)">
            <summary>
            Offers a message to the System.Threading.Tasks.Dataflow.ITargetSection`1, giving
            the target the opportunity to consume or postpone the message.
            </summary>
            <param name="messageValue">The value of the message being offered.</param>
            <param name="source"> The ISourceBlock offering the message. This may be null</param>
            <param name="consumeToAccept"> Set to true to instruct the target to call ISourceBlock.ConsumeMessage
            synchronously during the call to OfferMessage, prior to returning DataflowMessageStatus.Accepted,
            in order to consume the message.
            </param>
            <returns>
            The status of the offered message. If the message was accepted by the target,
             DataflowMessageStatus.Accepted is returned, and the source should no longer
             use the offered message, because it is now owned by the target.
             If the message was postponed by the target, DataflowMessageStatus.Postponed
             is returned as a notification that the target may later attempt to consume or
             reserve the message; in the meantime, the source still owns the message and may
             offer it to other blocks. If the target would have otherwise postponed message,
             but source was null, DataflowMessageStatus.Declined is instead returned.
             If the target tried to accept the message but missed it due to the source
             delivering the message to another target or simply discardingit, DataflowMessageStatus.NotAvailable is returned.
             If the target chose not to accept the message, DataflowMessageStatus.Declined is returned.
             If the target chose not to accept the message and will never accept another message from 
             this source, DataflowMessageStatus.DecliningPermanently is returned.</returns>
        </member>
        <member name="P:TaxHub.DataflowManager.Section`1.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:TaxHub.DataflowManager.Section`1.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="P:TaxHub.DataflowManager.Section`1.IsComplete">
            <summary>
            Gets a value indicating whether this instance is complete.
            </summary>
        </member>
        <member name="M:TaxHub.DataflowManager.Section`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TaxHub.DataflowManager.Section`1"/> class.
            </summary>
        </member>
        <member name="M:TaxHub.DataflowManager.Section`1.ADOItem(`0)">
            <summary>
            Adds the item.
            </summary>
            <param name="messageValue">The message value.</param>
        </member>
        <member name="T:TaxHub.DataflowManager.SourceSection`1">
            <inheritdoc />
        </member>
        <member name="P:TaxHub.DataflowManager.SourceSection`1.Completion">
            <summary>
            Represents the completion of the block
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.SourceSection`1.#ctor">
            <summary>
            The source section block
            </summary>
        </member>
        <member name="M:TaxHub.DataflowManager.SourceSection`1.LinkTo(TaxHub.DataflowManager.ITargetSection{`0},TaxHub.DataflowManager.DataflowLinkOptions)">
            <summary>
            Links the source block to the target block
            </summary>
            <param name="target">The target block</param>
            <param name="linkOptions">Linking options</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.SourceSection`1.LinkTo(TaxHub.DataflowManager.ITargetSection{`0},System.Predicate{`0},TaxHub.DataflowManager.DataflowLinkOptions)">
            <summary>
            Links the source block to the target block
            </summary>
            <param name="target">The target block</param>
            <param name="condition">The link condition</param>
            <param name="linkOptions">Linking options</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.SourceSection`1.ConsumeMessage(TaxHub.DataflowManager.ITargetSection{`0},System.Boolean@)">
            <summary>
            The message offered from the source
            </summary>
            <param name="message">The message</param>
            <param name="messageWasAccepted">Flag indicating whether the message was accepted</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TaxHub.DataflowManager.SourceSection`1.AddMessage(`0)">
            <summary>
            Adds a message to the source block for propagation. 
            This method must only be used by one thread at a time, and must not be used concurrently
            with any other producer side methods, e.g. AddMessages, Complete.
            </summary>
            <param name="item">The item to be wrapped in a message to be added.</param>
        </member>
        <member name="E:TaxHub.DataflowManager.TargetSection`1.ItemProcessed">
            <summary>
            Event that will be raised once the item has been processed
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.TargetSection`1.messages">
            <summary>
            Holds the messages to be processed
            </summary>
        </member>
        <member name="P:TaxHub.DataflowManager.TargetSection`1.IsActive">
            <summary>
            Indicates whethere there is any activity happenning
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.TargetSection`1.filter">
            <summary>
            Filter predicate
            </summary>
        </member>
        <member name="M:TaxHub.DataflowManager.TargetSection`1.#ctor(System.Action{`0})">
            <summary>
            Constructor
            </summary>
            <param name="action">Action input method</param>
        </member>
        <member name="M:TaxHub.DataflowManager.TargetSection`1.#ctor(System.Action{`0},System.Collections.Concurrent.ConcurrentQueue{`0})">
            <summary>
            Constructos
            </summary>
            <param name="action">Action input method</param>
            <param name="queue">Message queue to process</param>
        </member>
        <member name="M:TaxHub.DataflowManager.TargetSection`1.Send(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:TaxHub.DataflowManager.TargetSection`1.Run">
            <summary>
            The main processing method steps through the work queue and processes the work item one by one.
            </summary>
        </member>
        <member name="M:TaxHub.DataflowManager.TargetSection`1.OnItemProcessed">
            <summary>
            Event invocation 
            </summary>
        </member>
        <member name="F:TaxHub.DataflowManager.TransformManySection`2.source">
            <summary>The source side.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.TransformManySection`2.target">
            <summary>The target side.</summary>
        </member>
        <member name="T:TaxHub.DataflowManager.TransformSection`2">
            <inheritdoc />
        </member>
        <member name="F:TaxHub.DataflowManager.TransformSection`2.source">
            <summary>The source side.</summary>
        </member>
        <member name="F:TaxHub.DataflowManager.TransformSection`2.target">
            <summary>The target side.</summary>
        </member>
    </members>
</doc>
