<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TaxHub.SqlDeploy</name>
    </assembly>
    <members>
        <member name="T:TaxHub.SqlDeploy.CommandLine.RunAdhocScriptOptions">
            <summary>
            Options to drop and create the DB.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.RunAdhocScriptOptions.ConnectionString">
            <summary>
            Gets or sets The connection string to the DB that will be connected to.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.RunAdhocScriptOptions.ScriptFilePath">
            <summary>
            Gets or sets The path to the SQL script to execute.
            </summary>
        </member>
        <member name="T:TaxHub.SqlDeploy.CommandLine.RecreateOptions">
            <summary>
            Options to drop and create the DB.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.RecreateOptions.ConnectionString">
            <summary>
            Gets or sets The connection string to the DB that will be recreated.
            </summary>
        </member>
        <member name="T:TaxHub.SqlDeploy.CommandLine.SortedExportOptions">
            <summary>
            Options to export verb
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.SortedExportOptions.BatchSeparator">
            <summary>
            Gets or sets The bacth separator.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.SortedExportOptions.OutputDirectory">
            <summary>
            Gets or sets The export output directory.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.SortedExportOptions.OutputFile">
            <summary>
            Gets or sets The export output filename.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.SortedExportOptions.ScriptsOrderFile">
            <summary>
            Gets or sets Driver file with scripts listed in processing order.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.SortedExportOptions.BaseDirectory">
            <summary>
            Gets or sets Sorted script files base directory.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.SortedExportOptions.AddScriptTypeAsHeader">
            <summary>
            Gets or sets a value indicating whether Add the script type as a comment in the final export file for each type section.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.CommandLine.SortedExportOptions.SuppressErrorControlHeader">
            <summary>
            Gets or sets a value indicating whether Exclude 'WHENEVER SQLERROR EXIT FAILURE' from the header.
            </summary>
        </member>
        <member name="T:TaxHub.SqlDeploy.Database.DatabaseScriptExecutor">
            <summary>
            database sqlQuery executor
            </summary>
        </member>
        <member name="M:TaxHub.SqlDeploy.Database.DatabaseScriptExecutor.BuildQueryWithHeaderAndFooter(System.String,System.String,System.String)">
            <summary>
            returns a sql query string concatenated with a header and footer file
            </summary>
            <param name="scriptHeaderFile">header file to be concatenated above sqlQuery param</param>
            <param name="scriptParam">sql query contents that will be between header and footer</param>
            <param name="scriptFooterFile">footer file to be concatenated below sqlQuery param</param>
            <returns>string of header sqlQuery and footer concatenated together</returns>
        </member>
        <member name="M:TaxHub.SqlDeploy.Database.DatabaseScriptExecutor.ExecuteQueries(System.String,System.Collections.Generic.List{TaxHub.SqlDeploy.IO.SubFile},System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Executes query with no feedback
            </summary>
            <param name="connectionString">connection string to database</param>
            <param name="subFileList">sql files to execute</param>
            <param name="runInTransaction">Specifies if a script should be wrapped in a transaction.</param>
            <param name="writeToChangeLog">Specifies if a script should be logged to change log.</param>
            <param name="commandTimeout">Can be used to modify the command timeout allowed. The default is 300 seconds.</param>
        </member>
        <member name="M:TaxHub.SqlDeploy.Database.DatabaseScriptExecutor.ExecuteQueryAndReadResult(System.String,System.String)">
            <summary>
            Execute query and returns 1st column of query results in a string list
            </summary>
            <param name="connectionString">connection to database</param>
            <param name="sqlQuery">sql query to execute</param>
            <returns>list of strings containing only 1st column of query results in string list</returns>
        </member>
        <member name="M:TaxHub.SqlDeploy.Database.DatabaseScriptExecutor.ApplyScriptBasedOnTemplate(System.String,System.String,System.String[])">
            <summary>
            Applies sql query to database based on template file
            </summary>
            <param name="connectionString">connection string to connect to database</param>
            <param name="templateFile">template file to modify before executing sql query</param>
            <param name="replacePairs">old text, new text pairs. Old text is a variable in template file, new text value is what will replace the variable</param>
        </member>
        <member name="T:TaxHub.SqlDeploy.IO.SubFile">
            <summary>
            Object represents a file with various properties based on full path to file with file name
            </summary>
        </member>
        <member name="M:TaxHub.SqlDeploy.IO.SubFile.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TaxHub.SqlDeploy.IO.SubFile"/> class.
            Initializes a new instance of file DTO object that contains properties based on full path to a file
            </summary>
            <param name="filenameWithFullPathParameter">full path to file</param>
            <param name="isSetup">Used to denote if file should be treated as a setup file</param>
        </member>
        <member name="P:TaxHub.SqlDeploy.IO.SubFile.IsSetup">
            <summary>
            Gets a value indicating whether Used to denote if a file should be treated as a setup script.
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.IO.SubFile.ChangeNumber">
            <summary>
            Gets a value indicating whether first integer value in prefix of the file
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.IO.SubFile.IsChangeNumberSet">
            <summary>
            Gets a value indicating whether flag to indicate whether or not change number was set
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.IO.SubFile.FileNameWithPath">
            <summary>
            Gets a value indicating whether contains full path to file
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.IO.SubFile.FileName">
            <summary>
            Gets a value indicating whether contains filename
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.IO.SubFile.FileNameWithoutExtension">
            <summary>
            Gets a value indicating whether contains filename excluding extension
            </summary>
        </member>
        <member name="P:TaxHub.SqlDeploy.IO.SubFile.Description">
            <summary>
            Gets a value indicating whether Same thing as Filename without extension
            </summary>
        </member>
        <member name="T:TaxHub.SqlDeploy.IO.SubFileList">
            <summary>
            class generates dictionary of files
            </summary>
        </member>
        <member name="M:TaxHub.SqlDeploy.IO.SubFileList.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TaxHub.SqlDeploy.IO.SubFileList"/> class.
            Initializes a new instance of the dictionary of DTO file objects
            </summary>
            <param name="inputFilesDirectory">takes a string which is a path to a directory</param>
            <param name="isSetup">Used to denote if file is a setup file</param>
        </member>
        <member name="M:TaxHub.SqlDeploy.IO.SubFileList.GetSqlFilesToBeApplied(System.String)">
            <summary>
            Method that will execute a query to perform a diff analysis between local files and files recorded on changelog table
            </summary>
            <param name="connectionString">connection string to connect to database</param>
            <returns>returns list of files to be applied in order</returns>
        </member>
        <member name="M:TaxHub.SqlDeploy.IO.SubFileList.GetAllSqlFiles">
            <summary>
            Get all SQL files.
            </summary>
            <returns>The list of all files.</returns>
        </member>
        <member name="T:TaxHub.SqlDeploy.Program">
            <summary>
            Main starting point for sqlDeploy program
            </summary>
        </member>
        <member name="M:TaxHub.SqlDeploy.Program.Main(System.String[])">
            <summary>
            Main starting point for sqlDeploy program
            </summary>
            <param name="args">command line arguments</param>
        </member>
        <member name="M:TaxHub.SqlDeploy.Program.ParseDatabaseName(System.String)">
            <summary>
            Parses the database name from <paramref name="connectionString"/>.
            </summary>
            <param name="connectionString">The connection string to read the database name from.</param>
            <returns>The name of the database used in the connection string.</returns>
        </member>
    </members>
</doc>
